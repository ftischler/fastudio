{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/designers/designers.component.html","./src/app/designers/designers.component.ts","./src/app/feedback/feedback.component.html","./src/app/feedback/feedback.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/password/password.component.html","./src/app/password/password.component.ts.ForgetPasswordComponent.html","./src/app/password/password.component.ts","./src/app/ratings/ratings.component.html","./src/app/ratings/ratings.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/not-found/not-found.component.html","./src/app/shared/components/not-found/not-found.component.ts","./src/app/shared/components/toolbar/toolbar.component.html","./src/app/shared/components/toolbar/toolbar.component.ts","./src/app/shared/modules/material.module.ts","./src/app/shared/services/auth.guard.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/country.service.ts","./src/app/shared/services/feedback.service.ts","./src/app/shared/services/token-interceptor.service.ts","./src/app/shared/services/token.service.ts","./src/app/shared/services/users.service.ts","./src/app/shared/shared.module.ts","./src/app/terms/terms.component.html","./src/app/terms/terms.component.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAED;AACS;AACG;AACoB;AAC7B;AACS;AACG;WA8BnD,GAAG,EAAE,CAAC,wVAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,sBAAa,CAAC,OAKhE,GAAG,EAAE,CAAC,gXAAsC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,yBAAgB,CAAC;AAjC3F,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,MAAM;QACjB,UAAU,EAAE,MAAM;KACnB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,kEAAa;KACzB;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8EAAiB;KAC7B;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,gCAAgC;QACtC,SAAS,EAAE,8EAAiB;KAC7B;IACD;QACE,IAAI,EAAE,QAAQ;QACd,YAAY,IAAkE;QAC9E,wCAAwC;KACzC;IACD;QACE,IAAI,EAAE,WAAW;QACjB,YAAY,IAA2E;QACvF,WAAW,EAAE,CAAC,qEAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,kGAAiB;KAC7B;CACF,CAAC;AAMK,MAAM,gBAAgB;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGC3CxB;;;gwCACG,qJAA8B,mFAAM,MAAI,4EAAO,2BADF,oCAA+B,EAA/E,YACG,EAD6C,SAA+B,2BAA/E,0gBACG;kGAEH;;;iwCACG,mJAA4B,mFAAM,MAAI,8EAAS,2BADF,sCAAiC,EAAjF,YACG,EAD6C,SAAiC,2BAAjF,0gBACG;kGAEH;;;iwCACG,wJAAiC,mFAAM,MAAI,8EAAS,2BADP,sCAAiC,EAAjF,YACG,EAD6C,SAAiC,2BAAjF,0gBACG;kGAGH;;;iwCAAwF,+IAAwB,mFAAM,MAAI,oFAAe,2BAAzF,4CAAuC,EAAvF,YAAwF,EAAxC,SAAuC,2BAAvF,0gBAAwF;kGAQxF,iSAAmF,YAAnC;;wBAAkC;MAAlF,w4BAAmF,wJAA+B,mFAAM,MAAI,2EAAM,iCAAlI,kVAAmF;kGAhC3F,yIAAkB,KAChB,6KAAgD,EAAnC;;wBAAkC;MAA/C,kpBAAgD,MAChD,8zCAAqD,MACnD;;;;;;u5BAOC,IACC,gjBAAc,IACZ;;;gwCAAoC,+IAAuB,mFAAM,MAAI,yEAAI,MACzE;;;gwCAAsC,mJAA2B,mFAAM,MAAI,2EAAM,MACjF,mYACG,IAEH,mYACG,IAEH,mYACG,IAEH;;;mwCAAyC,mJAA2B,mFAAM,MAAI,8EAAS,MACvF,mYAAwF,IAExF;;;mwCACG,wJAAgC,mFAAM,MAAI,kFAAa,MAE1D;;;mwCACG,mJAA2B,mFAAM,MAAI,6EAAQ,MAEhD,mYAAmF,IAGvF,qJAAiC,KAC/B,4IAAqB,gkBAAe,IAEtC,0kBAAY,IACZ,q1BAAqD,4LAAoE,uJAA2B,kDAtCtJ,YAAgD,GAChD,YAAqD,GAMjD,uDAA0C,GAH1C,qBAA2B,kBAC3B,qBAAwB,EACxB,mBAAkB,EAJpB,YAOC,EAFC,UAA0C,EAH1C,UAA2B,EAC3B,UAAwB,EACxB,UAAkB,GAKC,wBAAkB,EAAnC,aAAoC,EAAnB,UAAkB,GAClB,0BAAoB,EAArC,aAAsC,EAArB,UAAoB,GACpB,oBAA8B,yBAA/C,aACG,EADc,UAA8B,GAG9B,oBAA8B,yBAA/C,aACG,EADc,UAA8B,GAG9B,oBAA8B,yBAA/C,aACG,EADc,UAA8B,GAG9B,6BAAuB,EAAxC,aAAyC,EAAxB,UAAuB,GACvB,oBAA8B,yBAA/C,aAAwF,EAAvE,UAA8B,GAE9B,2BAAqB,EAAtC,aACG,EADc,UAAqB,GAGrB,4BAAsB,EAAvC,aACG,EADc,UAAsB,GAGtB,oBAA8B,yBAA/C,aAAmF,EAAlE,UAA8B,GAI5B,aAAe,GAEtC,aAAY,GAC0B,yBAAc,EAApD,aAAqD,EAAf,UAAc,2BArCtD,oHAAqD,GACnD,6gCAOC,GAEG,yhBAAoC,GACpC,yhBAAsC,GAUtC,yhBAAyC,GAGzC,yhBACG,GAEH,yhBACG,GASP,wPAAqD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AACrB;AACV;AACoB;AACM;AAEnE,MAAM,oBAAoB,GAAG,GAAG,CAAC;AAM1B,MAAM,YAAY;IAKvB,YACE,iBAAoC,EACpC,YAA0B,EAClB,MAAc,EACf,WAAwB,EACxB,cAA8B;QAF7B,WAAM,GAAN,MAAM,CAAQ;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QARvC,aAAQ,GAAY,KAAK,CAAC;QAUxB,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,UAAU,CACxC,gBAAgB,oBAAoB,KAAK,CAC1C,CAAC;QACF,IAAI,CAAC,oBAAoB,GAAG,GAAG,EAAE,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACpE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACxD,oCAAoC;QACpC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CACrC,IAAI,CAAC,EAAE;YACL,8BAA8B;YAC9B,WAAW,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO;QACT,CAAC,CACF,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC7D,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;IAClC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BD;AAAA;AAAA,MAAM,YAAY,GAAG;IACnB,WAAW,EAAE;QACX,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;QAChB,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;QAC1B,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;QAC1B,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;QAC3B,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;KAClB;IACD,YAAY,EAAE,GAAG;CAClB,CAAC;AAoCK,MAAM,SAAS;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wGCnEzB,4oCAAiF,yBAApD,wBAAc,EAAC,kBAAe,EAA3D,YAAiF,EAApD,SAAc,EAAC,SAAe,2BAA3D,gTAAiF;wGAU7E,4oCAA0G,yBAA7E,wBAAc,EAAC,kBAAe,EAA3D,YAA0G,EAA7E,SAAc,EAAC,SAAe,2BAA3D,gTAA0G;wGAC1G,goBAAuE,IACrE,mHAAI,sIAAyD,iCAD/D,wIAAuE;wGAQjE,kdAAmC,uFAAW;wGAC9C,mcAAsD,IACpD,wIAAkB,KAChB,wHAAM,6KAA4C,mFAAM,MAAW,uLACrE;wGAMF,kdAAmC,sFAAU;wGAC7C,0bAAqC,yOAAwD;yGAK7F,kdAAmC,oFAAQ;yGAC3C,0bAAqC,IACnC;;wBAAwI;MAAhF;;wBAAqB;MAA7E,oiCAAwI,IACtI,wKAA+C,uFAAU,2BADlB,wBAAc,EAAvD,YAAwI,EAA/F,SAAc,GAAuB,gJAAyD,GAAvI,YAAwI,EAA1D,SAAyD,2BAAvI,iPAAwI;yGAM5I,0vBAAkE;yGAClE,8sBAA0D;wGA9B9D,qKAAwF,KACtF,y+CAAqC,MAGnC,q6BAAsC,KACpC,oiBAAmC,KACnC,khBAAsD,KAQxD,s6BAAsC,KACpC,oiBAAmC,KACnC,khBAAqC,KAIvC,s6BAAoC,KAClC,qiBAAmC,KACnC,mhBAAqC,KAOvC,gpBAAkE,KAClE,umBAA0D,KAE5D,m2BAA+G,GAA9D,wDAAwC,iDA/B9E,mBAAyB,aAApC,YAAqC,EAA1B,SAAyB,GAGpB,0BAAuB,EAArC,aAAsC,EAAxB,SAAuB,GAUvB,0BAAuB,EAArC,aAAsC,EAAxB,SAAuB,GAMvB,wBAAqB,EAAnC,aAAoC,EAAtB,SAAqB,GASnB,0DAAiD,EAAjE,aAAkE,EAAlD,oBAAiD,GACxD,mBAAgD,mBAAzD,aAA0D,EAAjD,SAAgD,GAE5C,mBAAiB,SAAC,kBAAe,EAAC,iDAAwC,GAAC,mBAAoB,EAA9G,aAA+G,EAAhG,SAAiB,EAAC,SAAe,EAAC,SAAwC,EAAC,UAAoB;wGA7CpH,yIAAwC,KACtC,62BAA4B,MAC1B,mHAAI,+FAAkB,MAExB,+pFAAgB,MACd,uUAAmC,kFAAM,MACzC;;;;;;;;wBAAgF;MAAhE;;wBAA0C;MAA1D,45BAAgF,KAElF,4HAAS,KACP,4YAA0G,IAC1G,4YAAuE,IAGvE,4YAAwF,iDAP7B,yBAAoB,EAA/E,aAAgF,EAArB,UAAoB,GAGnB,kEAA6C,IAAzG,aAA0G,EAA9C,UAA6C,GACjF,mEAA8C,IAAtE,aAAuE,EAA/C,UAA8C,GAGjE,8DAAyC,IAA9C,aAAwF,EAAnF,UAAyC,2BAZhD,8OAA4B,GAG5B,63EAAgB,IAEd,u/BAAgF;4LAPpF,2YAAiF,IACjF,2YAAwC,iDADoB,iCAAoB,GAAhF,YAAiF,EAArB,SAAoB,GAC9D,kCAAqB,GAAvC,YAAwC,EAAtB,SAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqE;AAC5B;AAC2C;AACzB;AACD;AACG;AAEtB;AAEuB;AACE;AACH;AAQtD,MAAM,kBAAkB;IAS7B,YAAoB,WAAyB,EACzB,WAAwB,EACxB,MAAc,EACd,QAAqB,EACtB,MAAiB;QAJhB,gBAAW,GAAX,WAAW,CAAc;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAa;QACtB,WAAM,GAAN,MAAM,CAAW;QAVpC,YAAO,GAAY,IAAI,CAAC;QACxB,SAAI,GAAY,KAAK,CAAC;QACtB,qBAAgB,GAAa,CAAC,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QASlD,IAAI,CAAC,MAAM,GAAG,6CAAE,CAAC,qEAAW,CAAC,QAAQ,CAAC,CAAC;IAAC,CAAC;IAGvD,qCAAqC;IAErC,QAAQ;QACN,yDAAyD;QACzD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;YACnC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC;gBACxE,MAAM,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;gBACjF,IAAI,KAAK,GAAG,KAAK,EAAE;oBAAG,OAAO,CAAC,CAAC,CAAC;iBAAE;gBAClC,IAAI,KAAK,GAAG,KAAK,EAAE;oBAAG,OAAO,CAAC,CAAC;iBAAE;gBACjC,OAAO,CAAC,CAAC;YACX,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACtC,CAAC,EACA,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,yBAAyB,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACN,CAAC;IAED,uBAAuB;IACvB,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,+BAA+B;IACvB,YAAY,CAAC,KAAK,EAAE,OAAO;QACjC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE;YACnC,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCtEO,mVAA4F,wFAAY,iCAAxG,qGAA4F;uGAI5F,oVAA8F,+FAAmB,iCAAjH,qGAA8F;uGAK9F,oVAA0F,sGAA0B,iCAApH,qGAA0F;uGAI1F,oVAAkG,oGAAwB,iCAA1H,qGAAkG;uGAGpG,2IAA6C,KAC3C,qHAAG,oHAAuC;uGAE5C,wHAA4B,KAC1B,0lCAA6B,yBAAhB,kBAAe,EAA5B,YAA6B,EAAhB,SAAe,2BAA5B,gTAA6B;uGAE/B,yIAAyD,KACvD,qHAAG,+LAAa;uGAjCxB,4nBAAU,IACN,mHAAI,qFAAQ,MACZ;;;;;wBAKC;MADC;;wBAAuB;MAJzB,s0BAKC,IACC,qsFAAgC,MAC9B;;;;;;;;;;;;;;;;;;;;;i2EAA4D,KAC5D,wYAA4F,IAC7E,uHAAI,KACrB,+sFAAgC,MAC9B;;;;;;;;;;;;;;;;;;;;;s3EAA2E,KAC3E,wYAA8F,IAC/E,uHAAI,KACrB,+sFAAgC,MAC9B,6SAAgB,mFAAO,MACvB;;;;;;;;;;;;;;;;;;;;;s3EAAmE,KACnE,wYAA0F,IAC3E,uHAAI,KACrB,+sFAAgC,MAC9B;;;;;;;;;;;;;;;;;;;;;m2EAAmE,KACnE,wYAAkG,IACnF,uHAAI,KAErB,4YAA6C,IAEvC,wHAAI,KACV,4YAA4B,IAG5B,4YAAyD,IAEnD,wHAAI,KACV,s3BAAyG,+EAAM,mDA/B/G,mBAA0B,eAF5B,YAKC,EAHC,SAA0B,GAIV,0BAAe,EAA/B,aAAgC,EAAhB,UAAe,GACM,uBAAsB,EAAzD,aAA4D,EAAzB,UAAsB,GAAzC,uBAAkB,EAAlC,aAA4D,EAA5C,UAAkB,GACvB,+DAAgF,sCAA3F,aAA4F,EAAjF,UAAgF,GAE7E,0BAAe,EAA/B,aAAgC,EAAhB,UAAe,GACoB,wBAAuB,EAAxE,aAA2E,EAA1B,UAAuB,GAA3C,wBAAmB,EAAhC,wBAAY,EAA5B,aAA2E,EAA9C,UAAmB,EAAhC,UAAY,GACjB,gEAAkF,uCAA7F,aAA8F,EAAnF,UAAkF,GAE/E,2BAAe,EAA/B,aAAgC,EAAhB,WAAe,GAEK,uBAAqB,EAAvD,aAAmE,EAAjC,WAAqB,GAAvC,uBAAiB,EAAuB,uBAAU,EAAlE,aAAmE,EAAnD,WAAiB,EAAuB,WAAU,GACvD,+DAA8E,qCAAzF,aAA0F,EAA/E,WAA8E,GAE3E,2BAAe,EAA/B,aAAgC,EAAhB,WAAe,GACY,2BAAyB,EAAlE,aAAmE,EAA1B,WAAyB,GAA/C,2BAAqB,EAAxC,aAAmE,EAAhD,WAAqB,GAC7B,mEAAsF,yCAAjG,aAAkG,EAAvF,WAAsF,GAG9E,sCAAuB,GAA5C,cAA6C,EAAxB,WAAuB,GAGtC,oCAAqB,GAA3B,cAA4B,EAAtB,WAAqB,GAGR,yDAAqC,IAAxD,cAAyD,EAAtC,WAAqC,GAG9B,6CAAiD,wBAAe,0BAAc,EAAxG,cAAyG,EAA/E,WAAiD,EAAe,WAAc,2BAnC9G,wIAAU,GAEN,8sBAKC,GACC,i6EAAgC,IAC9B,+sDAA4D,IAG9D,o6EAAgC,IAC9B,+sDAA2E,IAG7E,o8EAAgC,IAE9B,+uDAAmE,IAGrE,g9EAAgC,IAC9B,+uDAAmE,IAarE,+PAAyG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnC/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAK1B;AACkC;AACY;AACb;AAOlD,MAAM,iBAAiB;IAO5B,YACU,EAAe,EACf,QAAqB,EACrB,eAAgC;QAFhC,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAa;QACrB,oBAAe,GAAf,eAAe,CAAiB;QAR1C,YAAO,GAAY,KAAK,CAAC;QAEzB,UAAK,GAAY,KAAK,CAAC;IAMuB,CAAC;IAE/C,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,GAAG,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,GAAG,YAAY,sEAAiB,EAAE;gBACpC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;iBAC3C;qBAAM;oBACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;oBAC/B,oCAAoC;oBACrC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,2BAA2B,CAAC,CAAC;iBACnD;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAA+B;IACvB,YAAY,CAAC,KAAK,EAAE,OAAO;QACjC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE;YACnC,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGCjED,mlCAAgF,yBAA9D,yBAAe,EAA0B,+BAAoB,EAA/E,YAAgF,EAA9D,SAAe,EAA0B,SAAoB,2BAA/E,4dAAgF;mGAa1E,kRAAkG,YAAzB;;wBAAwB;MAAjG,ynBAAkG,kGAAyB,2BAAjE,wBAAc,EAAxE,YAAkG,EAAxC,SAAc,2BAAxE,iPAAkG;mGAClG;;wBAA+H;MAArB;;wBAAoB;MAA9H,6hCAA+H,uFAAc,2BAApF,wBAAc,EAAvE,YAA+H,EAAtE,SAAc,GAAC,sCAAiC,EAAzG,YAA+H,EAAvD,SAAiC,2BAAzG,iPAA+H;mGAU7H,iiCAA0D,yBAAd,wBAAa,EAAzD,YAA0D,EAAd,SAAa,2BAAzD,4dAA0D;mGAC1D,wiCAAiE,yBAArB,+BAAoB,EAAhE,YAAiE,EAArB,SAAoB,2BAAhE,4dAAiE;mGAI/D,mVAAwF,6FAAiB,iCAAzG,qGAAwF;mGAMxF,oVAA8F,gGACpF,iCADV,qGAA8F;mGAQ9F,+UAAyB,+EAAW,yDAApC,qGAAyB,qDAAW;oGAqCpC,oVAA8F,iGACpF,iCADV,qGAA8F;oGAO9F,oVAA4F,gGAAoB,iCAAhH,qGAA4F;oGAM1F;;;;;;ssBAAyD,8EAEzD,2BAFqC,kBAAmB,0BAAxD,YAAyD,EAApB,SAAmB,2BAAxD,uxBAAyD,0EAEzD;oGAEF,oVAAkF,2FAAe,iCAAjG,qGAAkF;oGAQlF,oVAAkF,+FAAmB,iCAArG,qGAAkF;oGAMlF,oVAAoG,qGAAyB,iCAA7H,qGAAoG;oGAMpG,oVAAsF,6FAAiB,iCAAvG,qGAAsF;oGAMpF;;;;;;ssBAAgE,8EAEhE,2BAF8C,kBAAiB,oBAA/D,YAAgE,EAAlB,SAAiB,2BAA/D,uxBAAgE,qEAEhE;oGAEF,oVAA0F,+FAAmB,iCAA7G,qGAA0F;oGAO1F,oVAAsF,6FAAiB,iCAAvG,qGAAsF;oGAOpF;;;;;;usBAAyD,8EAEzD,2BAFyC,kBAAe,oBAAxD,YAAyD,EAAhB,SAAe,2BAAxD,uxBAAyD,gEAEzD;oGAEF,qVAAsF,gGAC/E,iCADP,qGAAsF;oGAPxF,utFAA2F,MACzF,+UAA2C,kFAAM,MACjD;;;;;;;;;itFAA+D,KAC7D,+cAAyD,IAI3D,sYAAsF,iDAPb,0BAAe,EAA1F,YAA2F,EAAhB,UAAe,GAE5E,wBAAuB,EAAnC,aAA+D,EAAnD,UAAuB,GAAC,+BAA0B,EAA9D,aAA+D,EAA3B,UAA0B,GAChD,oBAA4B,SAAxC,aAAyD,EAA7C,UAA4B,GAI/B,4DAA0E,mCAArF,aAAsF,EAA3E,UAA0E,2BAPvF,y3EAA2F,IAEzF,6zEAA+D;oGAY/D,qVAAsF,4FAAgB,iCAAtG,qGAAsF;oGAHxF,utFAA2F,MACzF,+UAA2C,kFAAM,MACjD;;;;;;;;;;;;;;;;;;;;;s2EAA4D,KAC5D,sYAAsF,iDAHb,0BAAe,EAA1F,YAA2F,EAAhB,UAAe,GAEpD,wBAAuB,EAA3D,aAA4D,EAAxB,UAAuB,GAA3C,wBAAmB,EAAnC,aAA4D,EAA5C,UAAmB,GACxB,4DAA0E,mCAArF,aAAsF,EAA3E,UAA0E,2BAHvF,y3EAA2F,IAEzF,+sDAA4D;oGAO5D,qVAAoF,4FAAgB,iCAApG,qGAAoF;oGAMpF,qVAA0F,+FAAmB,iCAA7G,qGAA0F;oGAO1F,qVAA4F,oHAAwC,iCAApI,qGAA4F;oGAM5F,qVAA0G,iGAC1G,iCADA,qGAA0G;oGAK5G,+UAA4B,+EAAc,yDAA1C,qGAA4B,wDAAc;oGAC1C,wHAA+B,KAC7B,gmCAA6B,yBAAhB,kBAAe,EAA5B,YAA6B,EAAhB,SAAe,2BAA5B,gTAA6B;oGA5GjC;;;;;wBAA4G;MAA5B;;wBAA2B;MAA3G,s0BAA4G,IAC1G,8sFAAgC,MAC9B,2UAAwC,kFAAM,MAC9C;;;;;;;;;;;;;;;;;;;;;o2EAAoE,KACpE,sYAA8F,IAIhG,gtFAAgC,MAC9B,oUAAiC,kFAAM,MACvC;;;;;;;;;;;;;;;;;;;;;o2EAAkE,KAClE,sYAA4F,IAG9F,gtFAAgC,MAC9B,oUAAiC,kFAAM,MACvC;;;;;;;;;4sFAAoD,KAClD,+cAAyD,IAI3D,sYAAkF,IAGpF,gtFAAgC,MAC9B,4UAAyC,kFAAM,MAC/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8hHAAwF,KACxF;;;s3BAA6C,MAC7C,0kCAAqB,IACrB,uYAAkF,IAGpF,ktFAAgC,MAC9B,8UAAyC,kFAAM,MAC/C;;;;;;;;;;;;;;;;;;;;;w2EAA0E,KAC1E,uYAAoG,IAGtG,ktFAAgC,MAC9B,0UAAqC,kFAAM,MAC3C;;;;;;;;;;;;;;;;;;;;;23EAAgF,KAChF,uYAAsF,IAGxF,ktFAAgC,MAC9B,8UAAyC,kFAAM,MAC/C;;;;;;;;wBAAwF;MAA5E;;wBAAoB;MAAhC,wvFAAwF,KACtF,gdAAgE,IAIlE,uYAA0F,IAG5F,qtFAAgC,MAC9B,wUAAkC,8HAAM,mFAA8B,MAAO,8EAAM,MACnF;;;;;;;;;;;;;;;;;;;;;23EAA8E,KAC9E,8YAAsB,6HAAiD,MACvE,uYAAsF,IAIxF,0YAA2F,IAW3F,0YAA2F,IAM3F,2tFAAgC,MAC9B,2UAAqC,kFAAM,MAC3C;;;;;;;;;;;;;;;;;;;;;02EAA0D,KAC1D,uYAAoF,IAGtF,2tFAAgC,MAC9B,iVAA2C,kFAAM,MACjD;;;;;;;;;;;;;;;;;;;;;02EAAgE,KAChE,uYAA0F,IAG5F,2tFAAgC,MAC9B,4UAAsC,kFAAM,MAC5C;;;;;;;;;;;;;;;;;;;;;w1FAA0G,KAC1G,8YAAsB,mGAAuB,MAC7C,uYAA4F,IAG9F,2tFAAgC,MAC9B,qUAA+B,kFAAM,MACrC;;;;;;;;;;;;;;;;;;;;;w1FAAgI,KAChI,uYAA0G,IAI5G,m7EAAqC,0FAAiB,+LAAkC,YAAlB;;wBAAiB;MAAjC,wBAAkC,0FAAa,MACrG,0YAA4B,IAC5B,0YAA+B,IAG/B,4IAAoB,KAClB,kRAA6D,YAAnC;;wBAAqB;MAA/C,wmBAA6D,8EAAK,MAClE,k3BAAwG,iFAAQ,mDAhHtE,mBAAsB,WAApE,YAA4G,EAA9D,SAAsB,GAClD,0BAAe,EAA/B,YAAgC,EAAhB,UAAe,GAEW,4BAA2B,EAAnE,aAAoE,EAA5B,UAA2B,GAAnD,4BAAuB,EAAvC,aAAoE,EAApD,UAAuB,GAC5B,gEAAkF,uCAA7F,aAA8F,EAAnF,UAAkF,GAI/E,0BAAe,EAA/B,aAAgC,EAAhB,UAAe,GAEU,2BAA0B,EAAjE,aAAkE,EAA3B,UAA0B,GAAjD,2BAAsB,EAAtC,aAAkE,EAAlD,UAAsB,GAC3B,+DAAgF,sCAA3F,aAA4F,EAAjF,UAAgF,GAG7E,2BAAe,EAA/B,aAAgC,EAAhB,WAAe,GAEjB,uBAAqB,EAAjC,aAAoD,EAAxC,WAAqB,GAAC,uBAAiB,EAAnD,aAAoD,EAAlB,WAAiB,GACrC,qBAAwB,OAApC,aAAyD,EAA7C,WAAwB,GAI3B,2DAAsE,iCAAjF,aAAkF,EAAvE,WAAsE,GAGnE,2BAAe,EAA/B,aAAgC,EAAhB,WAAe,GAEb,4EAAqB,GAArC,aAAwF,EAAxE,WAAqB,GAA6B,uBAAqB,EAAvF,cAAwF,EAAtB,WAAqB,GAAjD,iCAA2B,EAAjE,cAAwF,EAAlD,WAA2B,GAChC,4EAAW,GAA5C,cAA6C,EAAZ,WAAW,GAEjC,2DAAsE,iCAAjF,cAAkF,EAAvE,WAAsE,GAGnE,2BAAe,EAA/B,cAAgC,EAAhB,WAAe,GAEc,gCAA8B,EAAzE,cAA0E,EAA/B,WAA8B,GAAzD,gCAA0B,EAA1C,cAA0E,EAA1D,WAA0B,GAC/B,oEAAwF,0CAAnG,cAAoG,EAAzF,WAAwF,GAGrF,2BAAe,EAA/B,cAAgC,EAAhB,WAAe,GAEc,yBAAuB,EAAlE,cAAgF,EAArC,WAAuB,GAA3C,yBAAmB,EAAyB,yBAAY,EAA/E,cAAgF,EAAzD,WAAmB,EAAyB,WAAY,GACpE,6DAA0E,mCAArF,cAAsF,EAA3E,WAA0E,GAGvE,2BAAe,EAA/B,cAAgC,EAAhB,WAAe,GAEI,2BAAyB,EAA1D,cAAwF,EAAvD,WAAyB,GAAC,kCAA4B,EAA3E,qBAAoB,WAAhC,cAAwF,EAA7B,WAA4B,EAA3E,WAAoB,GAClB,qBAAiC,YAA7C,cAAgE,EAApD,WAAiC,GAIpC,+DAA8E,qCAAzF,cAA0F,EAA/E,WAA8E,GAG3E,2BAAe,EAA/B,cAAgC,EAAhB,WAAe,GAEc,yBAAuB,EAAlE,cAA8E,EAAnC,WAAuB,GAA3C,yBAAmB,EAAyB,uBAAU,EAA7E,cAA8E,EAAvD,WAAmB,EAAyB,WAAU,GACnE,uBAAW,EAArB,cAAsB,EAAZ,WAAW,GACV,6DAA0E,mCAArF,cAAsF,EAA3E,WAA0E,GAIvE,iIAA0D,GAA1E,cAA2F,EAA3E,WAA0D,GAW1D,iIAA0D,GAA1E,cAA2F,EAA3E,WAA0D,GAM1D,2BAAe,EAA/B,cAAgC,EAAhB,WAAe,GAEM,wBAAsB,EAAzD,cAA0D,EAAvB,WAAsB,GAAzC,wBAAkB,EAAlC,cAA0D,EAA1C,WAAkB,GACvB,4DAAwE,kCAAnF,cAAoF,EAAzE,WAAwE,GAGrE,2BAAe,EAA/B,cAAgC,EAAhB,WAAe,GAES,2BAAyB,EAA/D,cAAgE,EAA1B,WAAyB,GAA/C,2BAAqB,EAArC,cAAgE,EAAhD,WAAqB,GAC1B,+DAA8E,qCAAzF,cAA0F,EAA/E,WAA8E,GAG3E,2BAAe,EAA/B,cAAgC,EAAhB,WAAe,GAEH,qBAAa,EAAvC,cAA0G,EAAhF,WAAa,GAAwC,4BAA0B,EAAzG,cAA0G,EAA3B,WAA0B,GAAjD,4BAAsB,EAAtC,4BAAe,EAAvD,cAA0G,EAAlD,WAAsB,EAAtC,WAAe,GAC7C,uBAAW,EAArB,cAAsB,EAAZ,WAAW,GACV,gEAAgF,sCAA3F,cAA4F,EAAjF,WAAgF,GAG7E,2BAAe,EAA/B,cAAgC,EAAhB,WAAe,GAEI,qBAAa,EAA9C,cAAgI,EAA/F,WAAa,GAAgD,mCAAiC,EAA/H,cAAgI,EAAlC,WAAiC,GAAhE,oCAA8B,EAA9C,4BAAe,EAA9D,cAAgI,EAAjE,WAA8B,EAA9C,WAAe,GACnD,uEAA8F,6CAAzG,cAA0G,EAA/F,WAA8F,GAI7F,wBAAsB,EAApC,cAAqC,EAAvB,WAAsB,GACzB,qBAAgB,WAA3B,cAA4B,EAAjB,WAAgB,GACrB,uCAAwB,GAA9B,cAA+B,EAAzB,WAAwB,GAKF,iDAAgD,kBAAe,0BAAc,EAAvG,cAAwG,EAA9E,WAAgD,EAAe,WAAc,mDAhH3G,8sBAA4G,GAC1G,y4EAAgC,IAE9B,+sDAAoE,IAKtE,o6EAAgC,IAE9B,+sDAAkE,IAIpE,g8EAAgC,IAE9B,y2EAAoD,IAQtD,g9EAAgC,IAE9B,+nFAAwF,IACxF,8nBAA6C,GAK/C,u+EAAgC,IAE9B,iwDAA0E,IAI5E,u+EAAgC,IAE9B,iwDAAgF,IAIlF,u+EAAgC,IAE9B,i4EAAwF,IAQ1F,u+EAAgC,IACU,6GAA8B,GACtE,iwDAA8E,IAC9E,+PAAsB,GAsBxB,u+EAAgC,IAE9B,iwDAA0D,IAI5D,u+EAAgC,IAE9B,iwDAAgE,IAIlE,u+EAAgC,IAE9B,w7DAA0G,IAC1G,+PAAsB,GAIxB,u+EAAgC,IAE9B,w7DAAgI,IAKlI,46CAAqC,IAMnC,+PAA6D,GAC7D,+PAAwG;oGAepG,qVAAwF,0GACxF,iCADA,qGAAwF;oGAG1F,+UAA+B,+EAAiB,yDAAhD,qGAA+B,2DAAiB;oGAChD,wHAAkC,KAChC,gmCAA6B,yBAAhB,kBAAe,EAA5B,YAA6B,EAAhB,SAAe,2BAA5B,gTAA6B;oGAhBnC,4IAA+C,KAC7C,qHAAG,sGAAyB,4HAAI,kHAC9B,2HAAG,qFAAsE,MAAI,qLAA6G,MAAI,sHAAI,KAClM,gVAAW,sIACgD,6HAAI,oNAE/D,MACF;;;;;wBAAwF;MAAxB;;wBAAuB;MAAvF,y0BAAwF,IACtF,ytFAAgC,MAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wtFAAsF,KACtF,4YAAsB,2FAAe,MACrC,sYAAwF,IAG1F,yYAA+B,IAC/B,yYAAkC,IAGlC,wHAAK,KACH,g3BAA4G,iFAAQ,mDAZ3F,mBAAuB,YAApD,aAAwF,EAA3D,SAAuB,GAClC,0BAAe,EAA/B,aAAgC,EAAhB,UAAe,GACiC,wBAAuB,EAArF,aAAsF,EAAxB,UAAuB,GAAvD,oCAA+B,EAA7C,yBAAa,EAA7B,aAAsF,EAAxD,UAA+B,EAA7C,UAAa,GACnB,sBAAW,EAArB,aAAsB,EAAZ,UAAW,GACV,6DAA4E,oCAAvF,aAAwF,EAA7E,UAA4E,GAG9E,oBAAmB,cAA9B,aAA+B,EAApB,UAAmB,GACxB,yCAA2B,GAAjC,aAAkC,EAA5B,UAA2B,GAIL,mDAAoD,mBAAe,yBAAc,EAA3G,aAA4G,EAAlF,UAAoD,EAAe,UAAc,mDAjB1G,qJAAsE,GACzE,sGAAW,GAIb,stBAAwF,GACtF,o6EAAgC,IAC9B,+sDAAsF,IACtF,sPAAsB,GAStB,wPAA4G;oGAIlH,2IAA8C,KAC5C,0zBAA2B,6FAAoB,MAC/C,qHAAG,8IAAiE,4HAAI,8FAAiB,2BADzF,kaAA2B;oGAzB/B,gJAAkD,KAChD,wYAA+C,IAuB/C,wYAA8C,iDAvBzB,sCAAyB,GAA9C,YAA+C,EAA1B,SAAyB,GAuBzB,qCAAwB,GAA7C,YAA8C,EAAzB,SAAwB;mGArMrD,ooBAA8C,IAC5C,uiCAA0C,MAExC,6wBAAwB,MACtB,mMAAsE,KACtE;;;;;wBAA6E;MAAxB;;wBAAuB;MAA5E,y0BAA6E,IAC3E,wYAA0D,IAC1D,wYAAiE,IACjE,ysFAA+B,MAC7B,wUAAqC,kFAAM,MAC3C;;;;;;;;;;;;;;;;;;;;;q3EAAyE,KACzE,qYAAwF,IAG1F,+sFAA+B,MAC7B,yUAAsC,kFAAM,MAC5C;;;;;;;;;;;;;;;;;;;;;u3EAAkF,KAClF,qYAA8F,IAIhG,yHAAK,KACH,8YAAmC,8KAA8B,YAA3B;;wBAA0B;MAA7B,wBAA8B,qGAE/D,MACF,wYAAyB,IACzB,gKAAyC,KACvC,2JAAoC,KAClC,wJAAiC,KACjC,6KAAgD,oFAEhD,MAIN,yIAAkB,KAChB,yHAAM,gFACF,6HAAI,4FACR,MAGF,6IAAsB,KACpB,0KAA6C,KAC3C,kJAA2B,KAG7B,0KAA6C,KAC3C,iJAA0B,KAG5B,0KAA6C,KAC3C,gJAAyB,KAMjC,gxBAAwB,MACtB,sYAA4G,IAmH5G,sYAAkD,iDA5KvC,wBAA0B,EAAzC,YAA0C,EAA3B,SAA0B,GAE9B,wBAAc,EAAvB,YAAwB,EAAf,SAAc,GAEQ,oBAAuB,YAApD,aAA6E,EAAhD,UAAuB,GAChC,uCAAyB,GAA3C,aAA0D,EAAxC,UAAyB,GACzB,uCAAyB,GAA3C,aAAiE,EAA/C,UAAyB,GAC3B,yBAAc,EAA9B,aAA+B,EAAf,UAAc,GAEqB,wBAAuB,EAAxE,aAAyE,EAAxB,UAAuB,GAA3C,wBAAmB,EAAzC,wBAAY,EAAnB,aAAyE,EAA5C,UAAmB,EAAzC,UAAY,GACR,6DAA4E,oCAAvF,aAAwF,EAA7E,UAA4E,GAGzE,yBAAc,EAA9B,aAA+B,EAAf,UAAc,GAE2B,2BAA0B,EAAjF,aAAkF,EAA3B,UAA0B,GAAjE,2BAAsB,EAAC,2BAAe,EAAtD,aAAkF,EAAlE,UAAsB,EAAC,UAAe,GAC3C,iEAAkF,uCAA7F,aAA8F,EAAnF,WAAkF,GAKtE,uBAAW,EAAlC,aAAmC,EAAZ,WAAW,GAGvB,qBAAa,QAAxB,aAAyB,EAAd,WAAa,GAgCrB,0BAAc,EAAvB,aAAwB,EAAf,WAAc,GACQ,sBAAgB,UAA7C,aAA4G,EAA/E,WAAgB,GAmHnB,sCAAuB,GAAjD,aAAkD,EAAxB,WAAuB,2BA7KvD,wIAA8C,GAC5C,mOAA0C,GAItC,0tBAA6E,GAG3E,o6EAA+B,IAE7B,+sDAAyE,IAI3E,o6EAA+B,IAE7B,+sDAAkF,IAMlF,4PAAmC;mGAxC7C,uYAAgF,IAChF,2IAAoB,KAClB,4IAAqB,KACnB,yIAAmB,KAEjB,qHAAG,sOACuJ,4HAAI,8FAC9J,MAEF,8IAAuB,KACrB;;wBAAyF;MAAhD;;wBAAoB;MAA7D,+hCAAyF,GAA3B,wDAA0B,IAAC,sFAEzF,MAAS,uHAAI,KACb,wYAAkG,IAClG,wYAA+H,IAIrI,wYAA8C,IA8M9C,uHAAI,yFAAY,MAChB,0IAAkB,KAChB,4oBAA+B,IAE7B,yMAAyE,KACzE,oHAAI,qFAAQ,MACZ,oIAAgB,yPAA4K,6HAAI,uIAA0D,MAE5P,2oBAA8B,IAE5B,uMAAuE,KACvE,oHAAI,oFAAO,MACX,oIAAgB,yNAA4I,MAE9J,2oBAA8B,IAE5B,8MAA8E,KAC9E,oHAAI,wFAAW,MACf,oIAAgB,iNAAoI,MAGxJ,0IAAkB,KAChB,sHAAG,gHAAmC,6HAAI,sHAAyC,MAAI,4EAEvF,4HAAG,uGAA0B,MAC7B,sHAAG,KACD,kKAA2C,wJAA4B,KACzE,iKAA0C,uJAA2B,KACrE,2LAAoE,uJAA2B,KAC/F,gKAAyC,sJAA0B,kDA7PnC,qCAAwB,GAA1D,YAAgF,EAA9C,SAAwB,GAU1B,wBAAc,EAAxC,aAAyF,EAA/D,SAAc,GAAsB,wCAA0B,GAAxF,aAAyF,EAA3B,SAA0B,GAGhF,oBAA+B,yBAAvC,aAAkG,EAA1F,SAA+B,GAC/B,mBAA8B,yBAAtC,aAA+H,EAAvH,SAA8B,GAIlC,kCAAqB,GAA/B,aAA8C,EAApC,SAAqB,2BARzB,oPAAyF,GAwN7F,0IAA+B,GAM/B,0IAA8B,GAM9B,4IAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9OhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AACN;AACE;AACvB;AACY;AACK;AACD;AACC;AACU;AACK;AAOlE,MAAM,aAAa;IAqBxB,YACS,WAAwB,EACxB,YAA0B,EACzB,cAA8B,EAC9B,EAAe,EACf,MAAc,EACf,MAAiB,EAChB,QAAqB;QANtB,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QACzB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACf,WAAM,GAAN,MAAM,CAAW;QAChB,aAAQ,GAAR,QAAQ,CAAa;QAxB/B,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;QAI1B,aAAQ,GAAY,KAAK,CAAC;QAC1B,gBAAW,GAAY,KAAK,CAAC;QAC7B,UAAK,GAAY,KAAK,CAAC;QACvB,cAAS,GAAY,KAAK,CAAC;QAC3B,aAAQ,GAAY,KAAK,CAAC;QAC1B,SAAI,GAAG;YACL,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;YAClC,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAC;SACvC,CAAC;IAYE,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;QAChD,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAC1C,SAAS,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CACxD,IAAI,CAAC,EAAE;YACL,sBAAsB;YACtB,gDAAgD;YAChD,8BAA8B;YAC9B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;QACnD,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,GAAG,YAAY,sEAAiB,EAAE;gBACpC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;iBAC3C;qBAAM,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC7B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;oBAC5C,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;oBAC3B,oCAAoC;oBACpC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;iBACxC;aACF;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IACD,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IACD,+BAA+B;IACvB,YAAY,CAAC,KAAK,EAAE,OAAO;QACjC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE;YACnC,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;IACpB,YAAY;QACV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CACxD,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,EAAE,SAAS,EAAE;gBACvD,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,8BAA8B;YAC9B,6CAA6C;QAC/C,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,GAAG,YAAY,sEAAiB,EAAE;gBACpC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;iBAC9C;qBAAM;oBACN,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;oBAC9B,oCAAoC;oBACrC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,qBAAqB,CAAC,CAAC;iBAC7C;aACF;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,GAAG,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9B,GAAG,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,IAAI,EAAE,CAAC,KAAK,EAAE,yDAAU,CAAC,YAAY,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK;YACjC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAChC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO;SACrC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,SAAS,CACpE,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,EAAE,SAAS,EAAE;gBACvD,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;QACL,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,GAAG,YAAY,sEAAiB,EAAE;gBACpC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;iBACjD;qBAAM;oBACN,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;oBACjC,oCAAoC;oBACrC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,qBAAqB,CAAC,CAAC;iBAC7C;aACF;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IACD,SAAS;QACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IACD,KAAK;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qEAAc,EAAE;YAC/B,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qFAAuB,EAAE;YACxC,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGClMO,mVAA0G,uHAA2C,iCAArJ,qGAA0G;uGAO1G,oVAAkH,wGACxG,iCADV,qGAAkH;uGAfxH,wHAA8B,KAC5B,kNAAkF,KAClF,sHAAI,gFAAY,MAChB;;;;;wBAAgF;MAAxB;;wBAAuB;MAA/E,g0BAAgF,IAC9E,isFAA+B,MAC7B,yUAAuC,kFAAM,MAC7C;;;;;;;;;;;;;;;;;;;;;wzFAA8G,KAC9G,0YAAsB,mGAAuB,MAC7C,yYAA0G,IAC3F,uHAAI,KAErB,0sFAA+B,MAC7B,mUAAgC,kFAAM,MACtC;;;;;;;;;;;;;;;;;;;;;0zFAAsH,KACtH,2YAAsB,6FAAiB,MACvC,yYAAkH,IAEnG,uHAAI,KACrB,o3BAAyG,gFAEzG,mDAjB2B,mBAA0B,eAAvD,YAAgF,EAAnD,SAA0B,GACrC,yBAAc,EAA9B,aAA+B,EAAf,UAAc,GAEL,oBAAa,EAApC,aAA8G,EAAvF,UAAa,GAA4C,8BAA6B,EAA7G,aAA8G,EAA9B,UAA6B,GAAxE,+BAA0B,EAAC,2BAAe,EAA/E,aAA8G,EAAzE,UAA0B,EAAC,UAAe,GACrE,sBAAW,EAArB,aAAsB,EAAZ,UAAW,GACV,sEAA8F,6CAAzG,aAA0G,EAA/F,UAA8F,GAG3F,yBAAc,EAA9B,aAA+B,EAAf,UAAc,GAEd,oBAAa,EAA3B,aAAsH,EAAxG,UAAa,GAAyD,kCAAiC,EAArH,aAAsH,EAAlC,UAAiC,GAAhF,oCAA8B,EAAC,4BAAe,EAAnF,aAAsH,EAAjF,WAA8B,EAAC,WAAe,GACzE,uBAAW,EAArB,aAAsB,EAAZ,WAAW,GACV,2EAAsG,iDAAjH,aAAkH,EAAvG,WAAsG,GAGzF,8CAAiD,sBAAe,0BAAc,EAAxG,aAAyG,EAA/E,WAAiD,EAAe,WAAc,mDAhBtG,qDAAY,GAChB,8sBAAgF,GAC9E,i6EAA+B,IAE7B,k4DAA8G,IAC9G,sPAAsB,GAIxB,o6EAA+B,IAE7B,k4DAAsH,IACtH,4PAAsB,GAIxB,4PAAyG;uGAK7G,uHAA6B,KAC3B,2IAAqB,KACnB,qHAAG,yHAA4C,MAEjD;;;0iCAA4D,gFAE5D,2BAF6C,wBAAc,EAA3D,YAA4D,EAAf,SAAc,GAAjC,uBAAkB,EAA5C,YAA4D,EAAlC,SAAkB,2BAA5C,iPAA4D;uGAI9D,wHAA4B,KAC1B,+lCAA6B,yBAAhB,kBAAe,EAA5B,YAA6B,EAAhB,SAAe,2BAA5B,gTAA6B;uGAE/B,yIAAyD,KACvD,qHAAG,+LAAa;uGArCpB,82BAA4B,yHAAI,2FAAc,MAC9C,8nBAAU,IACR,wYAA8B,IAuB9B,yYAA6B,IAOvB,oHAAI,KACV,yYAA4B,IAG5B,yYAAyD,IAEnD,oHAAI,kDApCL,qCAAwB,GAA7B,YAA8B,EAAzB,SAAwB,GAuBxB,oCAAuB,GAA5B,aAA6B,EAAxB,SAAuB,GAQtB,kCAAqB,GAA3B,aAA4B,EAAtB,SAAqB,GAGR,uDAAqC,IAAxD,aAAyD,EAAtC,SAAqC,2BApC1D,8OAA4B,GAC5B,wIAAU;;;;;;;6GCQA,mVAAwF,uGAA2B,iCAAnH,qGAAwF;6GAN5F;;;;;wBAEwB;MAAxB;;wBAAuB;MAFvB,g0BAEwB,IACtB,sHAAI,+FAAkB,MACtB,gsFAAgC,MAC9B;;;;;;;;;;;;;;;;;;;;;k2EAA0F,KAC1F,+YAAwF,IAE1F,o3BAAsG,+EAAM,MAC5G;;;+/BAAkE,8EAAK,mDARlD,mBAAuB,YAD9C,YAEwB,EADD,SAAuB,GAG5B,0BAAe,EAA/B,YAAgC,EAAhB,UAAe,GACqC,wBAAuB,EAAzF,aAA0F,EAAxB,UAAuB,GAA5D,yCAAoC,EAAjD,wBAAY,EAA5B,aAA0F,EAA7D,UAAoC,EAAjD,UAAY,GACjB,6DAA4E,oCAAvF,aAAwF,EAA7E,UAA4E,GAE/D,6CAA8C,mBAAe,yBAAc,EAArG,aAAsG,EAA5E,UAA8C,EAAe,UAAc,GAC9D,sBAA0B,EAAjE,aAAkE,EAA3B,UAA0B,2BATnE,8sBAEwB,GAEtB,y4EAAgC,IAC9B,+sDAA0F,IAG5F,wPAAsG,GACtG,qWAAkE;6GAEpE,2IAA6C,KAC3C,qHAAG,gIAAkF,4HAAI,4JAA+E,4HAAI,+HAAkD,yDAA3N,2EAAkF;6GAEvF,wHAA4B,KAC1B,+lCAA6B,yBAAhB,kBAAe,EAA5B,YAA6B,EAAhB,SAAe,2BAA5B,gTAA6B;6GAE/B,yIAAyD,KACvD,qHAAG,+LAAa;6GApBtB,0UAAoB,IAClB,8nBAAU,IACR,8YAEwB,IASxB,8YAA6C,IAEvC,mHAAI,KACV,+YAA4B,IAG5B,+YAAyD,IAEnD,oHAAI,kDAnBJ,qCAAwB,GAA9B,YAEwB,EAFlB,SAAwB,GAWT,oCAAuB,GAA5C,YAA6C,EAAxB,SAAuB,GAGtC,kCAAqB,GAA3B,aAA4B,EAAtB,SAAqB,GAGR,uDAAqC,IAAxD,aAAyD,EAAtC,SAAqC,2BAlB1D,wIAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAKlC;AACiD;AACf;AACD;AACA;AACK;AACE;AAOzD,MAAM,iBAAiB;IAQ5B,YAAoB,EAAe,EAC1B,WAAwB,EACxB,WAAyB,EACxB,KAAqB;QAHX,OAAE,GAAF,EAAE,CAAa;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAc;QACxB,UAAK,GAAL,KAAK,CAAgB;QAP/B,YAAO,GAAY,KAAK,CAAC;QAEzB,UAAK,GAAY,KAAK,CAAC;IAKY,CAAC;IAEpC,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;QACpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;QAC9C,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAC3E,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,GAAG,YAAY,sEAAiB,EAAE;gBACpC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;iBAC3C;qBAAM;oBACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;iBACjC;aACA;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,qBAAqB;IACb,UAAU;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,CAAC,CAAC;IACL,CAAC;CACF;AAGD,4BAA4B;AA+CrB,MAAM,uBAAuB;IAMlC,YAAmB,SAAgD,EACjC,IAAS,EACjC,EAAe,EACf,QAAqB,EACtB,WAAwB,EACvB,KAAqB;QALZ,cAAS,GAAT,SAAS,CAAuC;QACjC,SAAI,GAAJ,IAAI,CAAK;QACjC,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAa;QACtB,gBAAW,GAAX,WAAW,CAAa;QACvB,UAAK,GAAL,KAAK,CAAgB;QAT/B,YAAO,GAAY,KAAK,CAAC;QAEzB,UAAK,GAAY,KAAK,CAAC;IAOY,CAAC;IAEpC,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAC7D,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,GAAG,YAAY,sEAAiB,EAAE;gBACpC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;iBAC3C;qBAAM;oBACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;iBACjC;aACA;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEF,qBAAqB;IACb,UAAU;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sGC5JD,m2BAAa,MAAC,kHAAG,4GAA+B,MAChD,0nBAAU,IACR,2IAAwB,KACxB,mHAAI,wFAAW,MACf,mHACG,6NACmE,iCANxE,8OAAa,GACb,wIAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDV;AAAA;AAAA;AAAkD;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qGCdD,2HAAQ,KACN,wHAAK,KACH,qHAAG,wGAA2B,MAC9B,sHAAM,KACN,sIAAgB,KACd,yKAAqB,YAAlB;;wBAAiB;MAApB,wBAAqB,yFAAY,MAAI,4EACrC,+KAAwB,YAArB;;wBAAoB;MAAvB,wBAAwB,qFAAQ,MAElC,sHAAG,gGAA2B,MAC9B,sHAAG,yGAAuB,yDADvB,yDAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACG;AACoB;AACT;AAOzD,MAAM,eAAe;IAG1B,YAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IAAG,CAAC;IAExC,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9C,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8EAAiB,EAAE;YAClC,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;IACD,KAAK;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qEAAc,EAAE;YAC/B,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGC5BD,2nBAAU,IACR,2ZAIE,IACF,oHAAK,KACH,sHAAI,mGAAsB,MAC1B;;;miCAA8D,iGAE9D,2BAFyC,yBAAoB,EAA7D,YAA8D,EAArB,SAAoB,GAAnC,wBAAc,EAAxC,YAA8D,EAApC,SAAc,2BAR5C,wIAAU,GAQN,iPAA8D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRlE;AAAA;AAAA;AAAA;AAAkD;AACT;AAOlC,MAAM,iBAAiB;IAC5B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,QAAQ,KAAI,CAAC;CACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sGCAM,6IAGA;sGAGA,k/BAKA,iDAFC,uBAAoB,EADpB,oHAAoC,GAFrC,YAKA,EAFC,UAAoB,EADpB,UAAoC,2BAFrC,gjCAKA;sGAGA,oJAA6D;sGA1BpE,4IAAqB,KACnB,wSAKC,YAFC;;wBAA8B;MAHhC,ynBAKC,IACC,0IAAuB,KAEzB,0IAAoB,oJAAyB,KAAI,kFAAU,MAC3D,2IAAoB,KAClB;;;gZACG,8YAGA,IAEH;;;iZACG,8YAKA,IAEH;;;iZACG,8YAA6D,iDAxBhE,wBAAc,EADhB,YAKC,EAJC,SAAc,GASX,sCAAiC,EAApC,YACG,EADA,SAAiC,GAGhC,kHAA2D,IAF5D,aAGA,EADC,SAA2D,GAG5D,sCAAiC,EAApC,aACG,EADA,SAAiC,GAKhC,kHAA0D,IAJ3D,aAKA,EADC,UAA0D,GAG3D,qCAA+B,EAAlC,aACG,EADA,UAA+B,GACD,oBAA8B,yBAA5D,aAA6D,EAA/B,UAA8B,2BAzBjE,iPAKC,GAKC,oMACG,GAKH,uMACG,GAOH,2MACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AAC/B;AACF;AACmB;AACE;AACO;AAO5D,MAAM,gBAAgB;IAO3B,YACU,MAAc,EACf,WAAwB,EACxB,WAAyB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAc;QAJlC,kBAAa,GAAG,IAAI,0DAAY,EAAQ,CAAC;QAKrC,IAAI,CAAC,MAAM,GAAG,6CAAE,CAAC,qEAAW,CAAC,QAAQ,CAAC,CAAC;IAAC,CAAC;IAE7C,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QACtD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC/D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;oBACvD,OAAO,OAAO,CAAC,MAAM,KAAK,KAAK,CAAC;gBAClC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;QACD,OAAO;IACT,CAAC;CACF;;;;;;;;;;;;;ACzCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACU;AACE;AACJ;AACQ;AACe;AACX;AACR;AACO;AACF;AACT;AACE;AACF;AACA;AACU;AACK;AACQ;AACrB;AACE;AACE;AACG;AACP;AACF;AACM;AACA;AAC7D,MAAM,kBAAkB,GAAG;IACzB,4DAAY;IACZ,+EAAkB;IAClB,2EAAgB;IAChB,wEAAe;IACf,qEAAa;IACb,qEAAa;IACb,uEAAc;IACd,2EAAgB;IAChB,2EAAgB;IAChB,qEAAa;IACb,uEAAc;IACd,qEAAa;IACb,+EAAkB;IAClB,uEAAc;IACd,gFAAmB;IACnB,0EAAmB;IACnB,8EAAiB;IACjB,sEAAe;IACf,yEAAe;IACf,4EAAiB;IACjB,wEAAe;IACf,oEAAa;IACb,6EAAiB;IACjB,oFAAoB;IACpB,4FAAwB;IACxB,sEAAc;CACf,CAAC;AAMK,MAAM,cAAc;CAAG;;;;;;;;;;;;;AC1D9B;AAAA;AAAA;AAAA;AAAA;AAKyB;AAEoB;;;;AAKtC,MAAM,SAAS;IACpB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExE,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAE1B,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;YAC/B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;;;;;;;;;;;;;;ACzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AACpB;AACC;AAGV;AACA;AACuB;;;;;AAEhE,+CAA+C;AAC/C,MAAM,QAAQ,GAAG,GAAG,qEAAW,CAAC,QAAQ,KAAK,CAAC;AAIvC,MAAM,WAAW;IAItB,YAC+B,QAAgB,EACrC,UAAsB,EACtB,aAA4B,EAC5B,MAAc;QAHO,aAAQ,GAAR,QAAQ,CAAQ;QACrC,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE7B,UAAU,CAAC,IAAU;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAO,GAAG,QAAQ,eAAe,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAED,UAAU,CAAC,KAAa,EAAE,IAAS;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CACzB,GAAG,QAAQ,kBAAkB,KAAK,EAAE,EACpC,IAAI,CACL,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAU;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAO,GAAG,QAAQ,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,cAAc,CAAC,IAAS;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,GAAG,QAAQ,iBAAiB,EAAE,IAAI,CAAC,CAAC;IACvE,CAAC;IAED,QAAQ;QACN,IAAI,yEAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,OAAO,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC7C;IACH,CAAC;IACD,UAAU;QACR,IAAI,yEAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IACD,cAAc;QACZ,IAAI,yEAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACjD,IAAI,OAAO,CAAC;YACZ,IAAI,KAAK,EAAE;gBACT,OAAO,GAAG,uCAAU,CAAC,KAAK,CAAC,CAAC;gBAC5B,OAAO,OAAO,CAAC,IAAI,CAAC;aACrB;YACC,OAAO;SACV;IACH,CAAC;IAED,QAAQ,CAAC,UAAU,EAAE,KAAK;QACxB,IAAI,yEAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,UAAU,KAAK,cAAc,EAAE;gBACjC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC5B,4CAA4C;gBAC5C,6BAA6B;aAC5B;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aACzC;SACF;IACH,CAAC;IACD,QAAQ,CAAC,UAAU;QACjB,IAAI,yEAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,UAAU,KAAK,cAAc,EAAE;gBACjC,OAAO,IAAI,CAAC,YAAY,CAAC;gBAC3B,4CAA4C;gBAC5C,4BAA4B;aAC3B;iBAAM;gBACL,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aACzC;SACF;IACH,CAAC;IACD,WAAW,CAAC,UAAU;QACpB,IAAI,yEAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,UAAU,KAAK,cAAc,EAAE;gBACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,4CAA4C;gBAC5C,4BAA4B;aAC3B;iBAAM;gBACL,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;aACrC;SACF;IACH,CAAC;;;;;;;;;;;;;;;AClGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;AAEnC;AACuB;;;;AAEhE,MAAM,QAAQ,GAAG,GAAG,qEAAW,CAAC,QAAQ,KAAK,CAAC;AAIvC,MAAM,cAAc;IA8CzB,YAAoB,OAAoB,EAAU,MAAc;QAA5C,YAAO,GAAP,OAAO,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QA7ChE,kBAAa,GAAG;YACd,MAAM;YACN,SAAS;YACT,SAAS;YACT,WAAW;YACX,QAAQ;YACR,SAAS;YACT,OAAO;YACP,OAAO;YACP,aAAa;YACb,OAAO;YACP,QAAQ;YACR,OAAO;YACP,KAAK;YACL,OAAO;YACP,aAAa;YACb,OAAO;YACP,KAAK;YACL,QAAQ;YACR,QAAQ;YACR,MAAM;YACN,SAAS;YACT,OAAO;YACP,MAAM;YACN,OAAO;YACP,OAAO;YACP,UAAU;YACV,OAAO;YACP,MAAM;YACN,MAAM;YACN,MAAM;YACN,KAAK;YACL,SAAS;YACT,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,MAAM;YACN,SAAS;SACV,CAAC;QACF,SAAI,GAAG;YACL,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,YAAY;SACrB,CAAC;QAIA,IAAI,CAAC,UAAU,GAAG,IAAI,+DAAU,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,GAAG,QAAQ,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1E,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,gGAAgG,CACjG,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;ACnEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGT;AACuB;;;;AAEhE,+CAA+C;AAC/C,MAAM,QAAQ,GAAG,GAAG,qEAAW,CAAC,QAAQ,KAAK,CAAC;AAIvC,MAAM,eAAe;IAC1B,YAAoB,UAAsB,EAAU,MAAc;QAA9C,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtE,MAAM,CAAC,IAAc;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAW,GAAG,QAAQ,WAAW,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;;;;;;;;;;;;;;;ACjBH;AAAA;AAAA;AAAA;AAAqD;AAOR;;AAO7C,oEAAoE;AACpE,+CAA+C;AAE/C,eAAe;AACf,6BAA6B;AAC7B,wBAAwB;AACxB,oCAAoC;AACpC,0DAA0D;AAC1D,8BAA8B;AAC9B,4CAA4C;AAC5C,mCAAmC;AACnC,SAAS;AACT,4CAA4C;AAC5C,mBAAmB;AACnB,2DAA2D;AAC3D,uEAAuE;AACvE,0CAA0C;AAC1C,eAAe;AACf,iCAAiC;AACjC,QAAQ;AACR,MAAM;AACN,IAAI;AACG,MAAM,uBAAuB;IAClC,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,SAAS,CACP,GAAqB,EACrB,IAAiB;QAEjB,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,yDAAW,CAAC,CAAC;QACnD,IAAI,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YACtC,MAAM,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC;gBAC7B,UAAU,EAAE;oBACV,aAAa,EAAE,UAAU,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;iBAC9D;aACF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAClC;aAAM,IAAI,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;YAC/C,sBAAsB;YACtB,MAAM,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC;gBAC7B,UAAU,EAAE;oBACV,aAAa,EAAE,UAAU,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;iBAChE;aACF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAClC;aAAM;YACL,OAAO;SACR;IACH,CAAC;;;;;;;;;;;;;;;AC7DH;AAAA;AAAA;AAAA;AAAA;AAAsE;AACnB;;;AAK5C,MAAM,YAAY;IAIvB,YAC+B,QAAgB,EACrC,aAA4B;QADP,aAAQ,GAAR,QAAQ,CAAQ;QACrC,kBAAa,GAAb,aAAa,CAAe;IACnC,CAAC;IAEJ,QAAQ,CAAC,UAAU,EAAE,KAAK;QACxB,IAAI,yEAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,UAAU,KAAK,cAAc,EAAE;gBACjC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;iBAAM,IAAI,UAAU,KAAK,YAAY,EAAE;gBACtC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aACzC;SACF;IACH,CAAC;IACD,QAAQ,CAAC,UAAU;QACjB,IAAI,yEAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,UAAU,KAAK,cAAc,EAAE;gBACjC,OAAO,IAAI,CAAC,YAAY,CAAC;aAC1B;iBAAM,IAAI,UAAU,KAAK,YAAY,EAAE;gBACtC,OAAO,IAAI,CAAC,UAAU,CAAC;aACxB;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAClC;SACF;IACH,CAAC;IACD,WAAW,CAAC,UAAU;QACpB,IAAI,yEAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,UAAU,KAAK,cAAc,EAAE;gBACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;iBAAM,IAAI,UAAU,KAAK,YAAY,EAAE;gBACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;aACrC;SACF;IACH,CAAC;;;;;;;;;;;;;;;AC/CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGT;AACuB;;;;AAEhE,+CAA+C;AAC/C,MAAM,QAAQ,GAAG,GAAG,qEAAW,CAAC,QAAQ,KAAK,CAAC;AAIvC,MAAM,YAAY;IACvB,YAAoB,UAAsB,EAAU,MAAc;QAA9C,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IACtE,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAO,GAAG,QAAQ,sBAAsB,CAAC,CAAC;IACtE,CAAC;IACD,OAAO,CAAC,EAAE;QACR,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAO,GAAG,QAAQ,UAAU,EAAE,EAAE,CAAC,CAAC;IAC9D,CAAC;IACD,cAAc,CAAC,KAAK;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAO,GAAG,QAAQ,gBAAgB,KAAK,EAAE,CAAC,CAAC;IACvE,CAAC;IACD,aAAa,CAAC,KAAU,EAAE,IAAS;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,QAAQ,wBAAwB,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC;IAC/E,CAAC;IACD,UAAU,CAAC,EAAU,EAAE,IAAS;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAO,GAAG,QAAQ,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IACD,cAAc,CAAC,EAAU,EAAE,IAAS;QAClC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CACzB,GAAG,QAAQ,0BAA0B,EAAE,EAAE,EACzC,IAAI,CACL,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;AC9BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACR;AAKK;AAExD,MAAM,qBAAqB,GAAG;IAC5B,uEAAc;IACd,gEAAgB;IAChB,qEAAmB;CACpB,CAAC;AAoBK,MAAM,YAAY;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGCpC5B;;;;;;;;wBAGiC;MADjC;;wBAAoB;MAFpB,2lDAGiC,IAC/B,2IAAwB,wFAAW,MAErC,0UAAoB,IAClB,+nBAAU,IACR,q2BAAa,MACX,oHAAI,0FAAa,MAEnB,mHAAG,kLAAqG,MACxG,mHAAG,2QAA8L,MACjM,mHAAG,mOAAsJ,MACzJ,wIAAmB,KACjB,uHAAI,0FAAa,MACjB,uHAAI,KACF,uHAAI,8IAAiE,MACrE,uHAAI,8QAAiM,MACrM,uHAAI,kQAAqL,MACzL,uHAAI,6JAAgF,MAEtF,sHAAG,wLAA2G,MAEhH,uIAAmB,KACjB,uHAAI,gGAAmB,MACvB,uHAAI,KACF,uHAAI,mQAAsL,MAC1L,uHAAI,uKAA0F,MAEhG,sHAAG,uJAA0E,2BA3BnF,qCAAgC,EAHhC,YAGiC,EAAjC,SAAgC,2BAHhC,iPAGiC,GAI/B,wIAAU,GACR,gPAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRjB;AAAA;AAAA;AAAA;AAAkD;AACM;AAOjD,MAAM,cAAc;IAEzB,YACS,SAAuC;QAAvC,cAAS,GAAT,SAAS,CAA8B;IAC5C,CAAC;IAEL,QAAQ;IACR,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;CAEF;;;;;;;;;;;;;ACpBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,KAAK;IACb,QAAQ,EAAE,uBAAuB;CAClC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;AACvC;;;AAElB,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IACjD,2EAAwB,uBAAgB,CAAC,6EAAU;SAClD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACdH,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { RatingsComponent } from './ratings/ratings.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { NotFoundComponent } from './shared/components/not-found/not-found.component';\nimport { AuthGuard } from './shared/services/auth.guard';\nimport { PasswordComponent } from './password/password.component';\nimport { DesignersComponent } from './designers/designers.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'home'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'ratings',\n    component: RatingsComponent\n  },\n  {\n    path: 'feedback',\n    component: FeedbackComponent\n  },\n  {\n    path: 'designers',\n    component: DesignersComponent\n  },\n  {\n    path: 'passwordReset/:fullname/:token',\n    component: PasswordComponent\n  },\n  {\n    path: 'studio',\n    loadChildren: () => import('./studio/studio.module').then(m => m.StudioModule)\n    // data: { preload: true, delay: false }\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<div class=\"main\">\n  <app-toolbar (toggleSidenav)=\"sidenav.toggle()\"></app-toolbar>\n  <mat-sidenav-container class=\"app-sidenav-container\">\n    <mat-sidenav\n      class=\"app-sidenav mat-elevation-z10\"\n      [opened]=\"!isScreenSmall()\"\n      [fixedInViewport]=\"true\"\n      [fixedTopGap]=\"56\"\n      [mode]=\"isScreenSmall() ? 'over' : 'side'\"\n      #sidenav\n    >\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"/home\"><i class=\"fas fa-home\">&nbsp;</i>Home</a>\n        <a mat-list-item routerLink=\"/studio\"><i class=\"fas fa-band-aid\">&nbsp;</i>Studio</a>\n        <a mat-list-item *ngIf=\"authService.loggedIn()\" routerLink=\"/dashboard/profile\"\n          ><i class=\"fas fa-user-circle\">&nbsp;</i>Profile</a\n        >\n        <a mat-list-item *ngIf=\"authService.loggedIn()\" routerLink=\"/dashboard/portfolio\"\n          ><i class=\"fas fa-briefcase\">&nbsp;</i>Portfolio</a\n        >\n        <a mat-list-item *ngIf=\"authService.loggedIn()\" routerLink=\"/dashboard/enquiries\"\n          ><i class=\"fas fa-clipboard-list\">&nbsp;</i>Enquiries</a\n        >\n        <a mat-list-item routerLink=\"/designers\"><i class=\"fas fa-user-tag\">&nbsp;</i>Designers</a>\n        <a mat-list-item *ngIf=\"authService.loggedIn()\" routerLink=\"/dashboard/designers-forum\"><i class=\"fas fa-users\">&nbsp;</i>Designers Forum</a\n        >\n        <a mat-list-item routerLink=\"/ratings\"\n          ><i class=\"fas fa-star-half-alt\">&nbsp;</i>Rate & Review</a\n        >\n        <a mat-list-item routerLink=\"/feedback\"\n          ><i class=\"fas fa-comments\">&nbsp;</i>Feedback</a\n        >\n        <a mat-list-item *ngIf=\"authService.loggedIn()\" (click)=\"authService.logoutUser()\"><i class=\"fas fa-sign-out-alt\">&nbsp;</i>Logout</a>\n      </mat-nav-list>\n    </mat-sidenav>\n    <div class=\"app-sidenav-content\">\n      <div class=\"wrapper\"><router-outlet></router-outlet></div>\n    </div>\n    <app-footer></app-footer>\n    <button class=\"floatBtn\" mat-mini-fab color=\"accent\"><a href=\"https://wa.me/2348124188003?text=Hello,%20Fastudio%20team\"><i class=\"fab fa-whatsapp\"></i></a></button>\n  </mat-sidenav-container>\n</div>\n","import { Component, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\nimport { AuthService } from './shared/services/auth.service';\nimport { CountryService } from './shared/services/country.service';\n\nconst MAX_WIDTH_BREAKPOINT = 600;\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnDestroy {\n  mobileQuery: MediaQueryList;\n  BtnClick: Boolean = false;\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    mediaMatcher: MediaMatcher,\n    private router: Router,\n    public authService: AuthService,\n    public countryService: CountryService\n  ) {\n    this.mobileQuery = mediaMatcher.matchMedia(\n      `(max-width : ${MAX_WIDTH_BREAKPOINT}px)`\n    );\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n    // create acccess token for visitors\n    countryService.requestToken().subscribe(\n      data => {\n        // storing the generated token\n        authService.setToken('access_token', data.token);\n      }, err => {\n        return;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  isScreenSmall() {\n    return this.mobileQuery.matches;\n  }\n\n  btnClick() {\n    this.BtnClick = true;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ResponsiveModule } from 'ngx-responsive';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport { HomeComponent } from './home/home.component';\nimport { RatingsComponent } from './ratings/ratings.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { AuthService } from './shared/services/auth.service';\nimport { AuthGuard } from './shared/services/auth.guard';\nimport { TokenInterceptorService } from './shared/services/token-interceptor.service';\nimport { UsersService } from './shared/services/users.service';\nimport { TermsComponent } from './terms/terms.component';\nimport { PasswordComponent, ForgetPasswordComponent } from './password/password.component';\nimport { DesignersComponent } from './designers/designers.component';\n\nconst responConfig = {\n  breakPoints: {\n    xs: { max: 300 },\n    sm: { min: 301, max: 600 },\n    md: { min: 601, max: 960 },\n    lg: { min: 960, max: 1920 },\n    xl: { min: 1921 }\n  },\n  debounceTime: 100\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    RatingsComponent,\n    FeedbackComponent,\n    TermsComponent,\n    PasswordComponent,\n    ForgetPasswordComponent,\n    DesignersComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    BrowserAnimationsModule,\n    ResponsiveModule.forRoot(responConfig),\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    SharedModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    AuthService,\n    UsersService,\n    AuthGuard,\n    CookieService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [TermsComponent, ForgetPasswordComponent]\n})\nexport class AppModule {}\n","<mat-spinner class=\"loading\" color=\"accent\" [diameter]=\"30\" *ngIf=\"view == true\"></mat-spinner>\n<div class=\"main\" *ngIf=\"view == false\">\n  <mat-toolbar class=\"header\">\n    <h3>Verified Designers</h3>\n  </mat-toolbar>\n  <mat-form-field>\n    <i matPrefix class=\"fas fa-search\">&nbsp;</i>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n  </mat-form-field>\n  <section>\n    <mat-spinner class=\"loading\" color=\"accent\" [diameter]=\"30\" *ngIf=\"loading == true && dataSource == null\"></mat-spinner>\n    <mat-card class=\"empty\" *ngIf=\"loading == false && dataSource == null\">\n      <h5>Can't process request at the moment, do check back later.</h5>\n    </mat-card>\n    <div *ngIf=\"dataSource != null && length != 0\" class=\"table-container mat-elevation-z8\">\n      <mat-table [dataSource]=\"dataSource\">\n\n        <!-- designers Column -->\n        <ng-container matColumnDef=\"designer\">\n          <mat-header-cell *matHeaderCellDef> Designers </mat-header-cell>\n          <mat-cell class=\"designer\" *matCellDef=\"let designer\">\n            <div class=\"name\">\n              <span><i class=\"far fa-square\" aria-hidden=\"true\">&nbsp;</i></span>{{ designer.businessname }}\n            </div>\n          </mat-cell>\n        </ng-container>\n\n        <!-- location Column -->\n        <ng-container matColumnDef=\"location\">\n          <mat-header-cell *matHeaderCellDef> Location </mat-header-cell>\n          <mat-cell *matCellDef=\"let designer\">{{ designer.state + ',' + ' ' + designer.country.name }}</mat-cell>\n        </ng-container>\n\n        <!-- Action Column -->\n        <ng-container matColumnDef=\"action\">\n          <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\n          <mat-cell *matCellDef=\"let designer\">\n            <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"view = true\" routerLink=\"/studio/portfolio/{{designer.email}}/designs\">\n              <i class=\"fas fa-briefcase\" aria-hidden=\"true\"> Portfolio</i>\n            </button>\n          </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n      </mat-table>\n      <mat-paginator [length]=\"length\" [pageSize]=\"10\" [pageSizeOptions]=\"[10, 20, 30, 40, 50]\" showFirstLastButtons></mat-paginator>\n    </div>\n  </section>\n</div>\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport * as io from 'socket.io-client';\nimport _ from 'lodash';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UsersService } from '../shared/services/users.service';\nimport { environment } from '../../environments/environment';\nimport { User } from '../shared/models/user';\n\n@Component({\n  selector: 'app-designers',\n  templateUrl: './designers.component.html',\n  styleUrls: ['./designers.component.scss']\n})\nexport class DesignersComponent implements OnInit {\n  socket: any;\n  loggedInUser: any;\n  loading: Boolean = true;\n  view: Boolean = false;\n  displayedColumns: string[] = ['designer', 'location', 'action'];\n  dataSource: MatTableDataSource<User>;\n  length: number;\n\n  constructor(private userService: UsersService,\n              private authService: AuthService,\n              private router: Router,\n              private snackBar: MatSnackBar,\n              public dialog: MatDialog\n            ) { this.socket = io(environment.BASE_URL); }\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  // @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit() {\n    // this.loggedInUser = this.authService.getCurrentUser();\n    this.getDesigners();\n    this.socket.on('refreshPage', data => {\n      this.getDesigners();\n    });\n  }\n\n  getDesigners() {\n    this.userService.getDesigners().subscribe(data => {\n      this.loading = false;\n      this.dataSource = new MatTableDataSource(data.designers.sort(function(a, b) {\n        const nameA = a.businessname.toLowerCase(), nameB = b.businessname.toLowerCase();\n        if (nameA < nameB) {  return -1; }\n        if (nameA > nameB) {  return 1; }\n        return 0;\n      }));\n      this.dataSource.paginator = this.paginator;\n      this.length = data.designers.length;\n    },\n     err => {\n       this.loading = false;\n       this.errorHandler(err, 'failed to get designers');\n     });\n  }\n\n  // filtering table data\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    console.error(message);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n}\n","<mat-card>\n    <h2>Feedback</h2>\n    <form\n      class=\"form-container\"\n      [formGroup]=\"feedbackForm\"\n      novalidate\n      (ngSubmit)=\"onSubmit()\"\n    >\n      <mat-form-field color=\"primary\">\n        <input matInput placeholder=\"Name\" formControlName=\"name\" />\n        <mat-error *ngIf=\"feedbackForm.controls.name.invalid && feedbackForm.controls.name.touched\">enter a name</mat-error>\n      </mat-form-field><br>\n      <mat-form-field color=\"primary\">\n        <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\" />\n        <mat-error *ngIf=\"feedbackForm.controls.email.invalid && feedbackForm.controls.email.touched\">enter a valid email</mat-error>\n      </mat-form-field><br>\n      <mat-form-field color=\"primary\">\n        <span matPrefix>+&nbsp;</span>\n        <input matInput placeholder=\"Tel\" formControlName=\"tel\" type=\"tel\">\n        <mat-error *ngIf=\"feedbackForm.controls.tel.invalid && feedbackForm.controls.tel.touched\">enter a valid phone number</mat-error>\n      </mat-form-field><br>\n      <mat-form-field color=\"primary\">\n        <textarea matInput placeholder=\"Message\" formControlName=\"message\"></textarea>\n        <mat-error *ngIf=\"feedbackForm.controls.message.invalid && feedbackForm.controls.message.touched\">enter a detailed message</mat-error>\n      </mat-form-field><br>\n\n      <div class=\"success\" *ngIf=\"success == true\">\n        <i>We appriciate your feedback. Thank You!</i>\n      </div><br>\n      <span *ngIf=\"click == true\">\n        <mat-spinner [diameter]=\"20\"></mat-spinner>\n      </span>\n      <div class=\"error\" *ngIf=\"sendError && success == false\">\n        <i>{{sendError}}</i>\n      </div><br>\n      <button mat-raised-button [disabled]=\"click == true ||feedbackForm.invalid\" type=\"submit\" color=\"accent\">Submit</button>\n    </form>\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FeedbackService } from '../shared/services/feedback.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.scss']\n})\nexport class FeedbackComponent implements OnInit {\n  feedbackForm: FormGroup;\n  success: Boolean = false;\n  sendError: string;\n  click: Boolean = false;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    private feedbackService: FeedbackService) { }\n\n  ngOnInit() {\n    this.feedbackForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      tel: ['', Validators.required],\n      message: ['', Validators.required],\n    });\n  }\n  onSubmit() {\n    this.click = true;\n    this.sendError = null;\n    this.feedbackService.create(this.feedbackForm.value).subscribe(data => {\n      this.feedbackForm.reset();\n      this.click = false;\n      this.success = true;\n    },\n    err => {\n      this.click = false;\n      this.success = false;\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 400) {\n          this.sendError = err.error.msg[0].message;\n        } else {\n         this.sendError = err.error.msg;\n         // calling the snackbar errorhandler\n        this.errorHandler(err, 'failed to process request');\n        }\n      }\n    });\n  }\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    console.error(message);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n\n}\n","<mat-progress-bar color=\"primary\" *ngIf=\"BtnClick == true\" mode=\"indeterminate\"></mat-progress-bar>\n<div class=\"header\">\n  <div class=\"overlay\">\n    <div class=\"intro\">\n      <!-- <span>Fashion Studio</span> -->\n      <p>\n        Africa's largest fashion studio showcasing Africa's beauty in fashion designing and styles, and connecting you with the best of designers across Africa.<br>(Sew on the go!)\n      </p>\n    </div>\n    <div class=\"actionBtn\">\n      <button mat-raised-button color=\"accent\" (click)=\"btnClick()\" [routerLink]=\"['/studio']\">\n        Explore Designs\n      </button><br>\n      <button *ngIf=\"!authService.loggedIn()\" mat-raised-button color=\"accent\" (click)=\"click = !click\">Get-Started as a designer</button>\n      <button *ngIf=\"authService.loggedIn()\" mat-raised-button color=\"accent\" routerLink=\"/dashboard/portfolio\" (click)=\"btnClick()\">Goto Portfolio</button>\n    </div>\n  </div>\n</div>\n<mat-card *ngIf=\"click == true\" class=\"login\">\n  <mat-tab-group animationDuration=\"1500ms\">\n    <!-- sign In form -->\n    <mat-tab label=\"SignIn\">\n      <img src=\"assets/images/logo.png\" width=\"100px\" class=\"user-avatar\" />\n      <form class=\"form-container\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-progress-bar *ngIf=\"submitted == true\" mode=\"buffer\"></mat-progress-bar>\n        <mat-progress-bar *ngIf=\"submitted == true\" mode=\"indeterminate\"></mat-progress-bar>\n        <mat-form-field color=\"accent\">\n          <i matPrefix class=\"fas fa-envelope\">&nbsp;</i>\n          <input type=\"email\" matInput placeholder=\"Email\" formControlName=\"email\">\n          <mat-error *ngIf=\"loginForm.controls.email.invalid && loginForm.controls.email.touched\">email is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field color=\"accent\">\n          <i matPrefix class=\"fa fa-unlock-alt\">&nbsp;</i>\n          <input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\">\n          <mat-error *ngIf=\"loginForm.controls.password.invalid && loginForm.controls.password.touched\">password is\n            required</mat-error>\n        </mat-form-field>\n\n        <div>\n          <mat-hint class=\"txt2\" align=\"end\"><a (click)=\"forgetPassword()\">\n              Forgot email/password?\n            </a></mat-hint>\n          <mat-error *ngIf=\"error\">{{ error }}</mat-error>\n          <div class=\"container-login100-form-btn\">\n            <div class=\"wrap-login100-form-btn\">\n              <div class=\"login100-form-bgbtn\"></div>\n              <button type=\"submit\" class=\"login100-form-btn\">\n                Login\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"txt1\">\n          <span>\n            OR<br> Sign In Using\n          </span>\n        </div>\n\n        <div class=\"flex-c-m\">\n          <a href=\"#\" class=\"login100-social-item bg1\">\n            <i class=\"fab fa-facebook\"></i>\n          </a>\n\n          <a href=\"#\" class=\"login100-social-item bg2\">\n            <i class=\"fab fa-twitter\"></i>\n          </a>\n\n          <a href=\"#\" class=\"login100-social-item bg3\">\n            <i class=\"fab fa-google\"></i>\n          </a>\n        </div>\n      </form>\n    </mat-tab>\n    <!-- sign up form -->\n    <mat-tab label=\"SignUp\">\n      <form class=\"form-container\" *ngIf=\"!success\" [formGroup]=\"userForm\" novalidate (ngSubmit)=\"userOnSubmit()\">\n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-user-circle\">&nbsp;</i>\n          <input matInput placeholder=\"FirstName\" formControlName=\"firstname\">\n          <mat-error *ngIf=\"userForm.controls.firstname.invalid && userForm.controls.firstname.touched\">firstname is\n            required</mat-error>\n        </mat-form-field>\n    \n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-user\">&nbsp;</i>\n          <input matInput placeholder=\"LastName\" formControlName=\"lastname\">\n          <mat-error *ngIf=\"userForm.controls.lastname.invalid && userForm.controls.lastname.touched\">lastname is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-male\">&nbsp;</i>\n          <mat-select formControlName=\"sex\" placeholder=\"Sex\">\n            <mat-option *ngFor=\"let sex of sexs\" [value]=\"sex.value\">\n              {{sex.viewValue}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"userForm.controls.sex.invalid && userForm.controls.sex.touched\">sex is required</mat-error>\n        </mat-form-field>\n    \n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-calendar-alt\">&nbsp;</i>\n          <input matInput [matDatepicker]=\"dob\" placeholder=\"Date of Birth\" formControlName=\"dob\">\n          <mat-datepicker-toggle matSuffix [for]=\"dob\"></mat-datepicker-toggle>\n          <mat-datepicker #dob></mat-datepicker>\n          <mat-error *ngIf=\"userForm.controls.dob.invalid && userForm.controls.dob.touched\">select a valid date</mat-error>\n        </mat-form-field>\n    \n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-address-card\">&nbsp;</i>\n          <input matInput placeholder=\"BusinessName\" formControlName=\"businessname\">\n          <mat-error *ngIf=\"userForm.controls.businessname.invalid && userForm.controls.businessname.touched\">business name is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-envelope\">&nbsp;</i>\n          <input matInput #email placeholder=\"Email\" formControlName=\"email\" type=\"email\">\n          <mat-error *ngIf=\"userForm.controls.email.invalid && userForm.controls.email.touched\">email is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-globe-africa\">&nbsp;</i>\n          <mat-select [(value)]=\"selected\" formControlName=\"country\" placeholder=\"Select Country\">\n            <mat-option *ngFor=\"let country of countries\" [value]=\"country\">\n              {{country.name}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"userForm.controls.country.invalid && userForm.controls.country.touched\">select your country</mat-error>\n        </mat-form-field>\n    \n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-phone\"><Span>+{{selected?.callingCodes[0]}}</Span>&nbsp;</i>\n          <input matInput #phone placeholder=\"Phone\" formControlName=\"phone\" type=\"tel\">\n          <mat-hint align=\"end\">NB: Verification code will be sent to this number</mat-hint>\n          <mat-error *ngIf=\"userForm.controls.phone.invalid && userForm.controls.phone.touched\">phone is required</mat-error>\n        </mat-form-field>\n    \n        <!-- Nigeria states -->\n        <mat-form-field *ngIf=\"userForm.controls.country.value?.name == 'Nigeria'\" color=\"primary\">\n          <i matPrefix class=\"fas fa-map-marker-alt\">&nbsp;</i>\n          <mat-select formControlName=\"state\" placeholder=\"Select State\">\n            <mat-option *ngFor=\"let state of states\" [value]=\"state\">\n              {{state}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"userForm.controls.state.invalid && userForm.controls.state.touched\">select a valid\n            state</mat-error>\n        </mat-form-field>\n    \n        <mat-form-field *ngIf=\"userForm.controls.country.value?.name != 'Nigeria'\" color=\"primary\">\n          <i matPrefix class=\"fas fa-map-marker-alt\">&nbsp;</i>\n          <input matInput placeholder=\"State\" formControlName=\"state\">\n          <mat-error *ngIf=\"userForm.controls.state.invalid && userForm.controls.state.touched\">enter your state</mat-error>\n        </mat-form-field>\n\n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"far fa-building\">&nbsp;</i>\n          <input matInput placeholder=\"City\" formControlName=\"city\">\n          <mat-error *ngIf=\"userForm.controls.city.invalid && userForm.controls.city.touched\">city is required</mat-error>\n        </mat-form-field>\n        \n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-map-marked-alt\">&nbsp;</i>\n          <input matInput placeholder=\"Address\" formControlName=\"address\">\n          <mat-error *ngIf=\"userForm.controls.address.invalid && userForm.controls.address.touched\">address is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fa fa-unlock-alt\">&nbsp;</i>\n          <input matInput #password minlength=\"8\" type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n          <mat-hint align=\"end\">minimum of 8 characters</mat-hint>\n          <mat-error *ngIf=\"userForm.controls.password.invalid && userForm.controls.password.touched\">password (8 characters minimum) required</mat-error>\n        </mat-form-field>\n    \n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fa fa-key\">&nbsp;</i>\n          <input matInput #confirmPassword minlength=\"8\" type=\"password\" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\">\n          <mat-error *ngIf=\"userForm.controls.confirmPassword.invalid && userForm.controls.confirmPassword.touched\">mix-matched password\n          </mat-error>\n        </mat-form-field>\n    \n        <mat-checkbox formControlName=\"oath\">I agree with the <a class=\"link\" (click)=\"terms()\">Terms of use!</a></mat-checkbox>\n        <mat-error *ngIf=\"regError\">{{ regError }}</mat-error>\n        <span *ngIf=\"regClick == true\">\n          <mat-spinner [diameter]=\"20\"></mat-spinner>\n        </span>\n        <div class=\"regBtn\">\n          <button mat-raised-button (click)=\"resetForm()\" type=\"reset\">Reset</button>\n          <button mat-raised-button [disabled]=\"regClick == true || !userForm.valid\" type=\"submit\" color=\"accent\">Register</button>\n        </div>\n      </form>\n      <div class=\"verification\" *ngIf=\"success == true\">\n        <div class=\"success\" *ngIf=\"verified == false\">\n          <p>Registration Successsful!<br>A verification code has been sent to \n            <i>\"{{'+' + selected?.callingCodes[0] + userForm.controls.phone.value}}\",</i> Check your message inbox and enter the code recieved below to verify your account and access your portfolio.</p><br>\n            <mat-error>\n              Note: Verification code may take a few seconds to arrive.<br>\n              if the mobile number above is not yours, contact the Fastudio team with the contact details at the end of this page for verification.\n            </mat-error>\n          <form class=\"form-container\" [formGroup]=\"tokenForm\" novalidate (ngSubmit)=\"verifyMe()\">\n            <mat-form-field color=\"primary\">\n              <input matInput type=\"number\" placeholder=\"Verification code\" formControlName=\"token\">\n              <mat-hint align=\"end\">Enter code here</mat-hint>\n              <mat-error *ngIf=\"tokenForm.controls.token.invalid && tokenForm.controls.token.touched\">verification code is required\n              </mat-error>\n            </mat-form-field>\n            <mat-error *ngIf=\"verifyError\">{{ verifyError }}</mat-error>\n            <span *ngIf=\"verifyClick == true\">\n              <mat-spinner [diameter]=\"20\"></mat-spinner>\n            </span>\n            <div>\n              <button mat-raised-button [disabled]=\"verifyClick == true || !tokenForm.valid\" type=\"submit\" color=\"accent\">VerifyMe</button>\n            </div>\n          </form>\n        </div>\n        <div class=\"success\" *ngIf=\"verified == true\">\n          <mat-icon class=\"coreIcon\">check_circle_outline</mat-icon>\n          <p>Verification Successful, proceed to your portfolio by signing in.<br>Welcome on board.</p>\n        </div>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n</mat-card>\n\n<h2>Our Services</h2>\n<div class=\"core\">\n  <mat-card class=\"showcase txt\">\n    <!-- <i class=\"coreIcon fas fa-layer-group\"></i> -->\n    <img src=\"../../assets/images/showcase.png\" width=\"120px\" alt=\"showcase\">\n    <h3>Showcase</h3>\n    <p class=\"ptxt\">Africa's uniqueness can be seen through its various art forms, paintings and most expecially its vibrant fashion which has recently begun to get the attention of the world.<br>Deploy your designs to fastudio today and be glad you did.</p>\n  </mat-card>\n  <mat-card class=\"explore txt\">\n    <!-- <i class=\"coreIcon fas fa-location-arrow\"></i> -->\n    <img src=\"../../assets/images/explore.png\" width=\"150px\" alt=\"explore\">\n    <h3>Explore</h3>\n    <p class=\"ptxt\">Explore the studio today and checkout amazing designs from the best of Africa's fashion designers with just a button click (Sew on the go!).</p>\n  </mat-card>\n  <mat-card class=\"network txt\">\n    <!-- <i class=\"coreIcon fas fa-bezier-curve\"></i> -->\n    <img src=\"../../assets/images/colaborate.png\" width=\"200px\" alt=\"Collaborate\">\n    <h3>Collaborate</h3>\n    <p class=\"ptxt\">Collaboration and networking with fellow designers across Africa just got easier with fastudio. This is The Designers Network (TDN).</p>\n  </mat-card>\n</div>\n<div class=\"info\">\n  <p>For more enquires and partnerships,<br>contact the team at hello@fastudio.com.ng</p>\n  OR\n  <p>via mobile: +2348124188003</p>\n  <p>\n    <a href=\"https://instagram.com/fastudiong\"><i class=\"fab fa-instagram\"></i></a>\n  <a href=\"https://facebook.com/fastudioNG\"><i class=\"fab fa-facebook\"></i></a>\n  <a href=\"https://wa.me/2348124188003?text=Hello,%20Fastudio%20team\"><i class=\"fab fa-whatsapp\"></i></a>\n  <a href=\"https://twitter.com/fastudioNG\"><i class=\"fab fa-twitter\"></i></a>\n  </p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../shared/services/auth.service';\nimport { TokenService } from '../shared/services/token.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TermsComponent } from '../terms/terms.component';\nimport { CountryService } from '../shared/services/country.service';\nimport { ForgetPasswordComponent } from '../password/password.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  loginForm: FormGroup;\n  tokenForm: FormGroup;\n  userForm: FormGroup;\n  success: Boolean = false;\n  verified: Boolean = false;\n  error: string;\n  regError: string;\n  verifyError: string;\n  regClick: Boolean = false;\n  verifyClick: Boolean = false;\n  click: Boolean = false;\n  submitted: Boolean = false;\n  BtnClick: Boolean = false;\n  sexs = [\n    {value: 'male', viewValue: 'Male'},\n    {value: 'female', viewValue: 'Female'}\n  ];\n  states: any;\n  countries: any;\n\n  constructor(\n    public authService: AuthService,\n    public tokenService: TokenService,\n    private countryService: CountryService,\n    private fb: FormBuilder,\n    private router: Router,\n    public dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.getCountries();\n    this.states = this.countryService.nigeriaStates;\n    this.createLoginForm();\n    this.createUserForm();\n    this.createTokenForm();\n  }\n  getCountries() {\n    this.countryService.getCountries().subscribe(\n      countries => {\n        this.countries = countries;\n      }\n    );\n  }\n  onSubmit() {\n    this.error = null;\n    this.submitted = true;\n    this.authService.loginUser(this.loginForm.value).subscribe(\n      data => {\n        // remove access token\n        // this.authService.deleteToken('access_token');\n        // storing the generated token\n        this.authService.setToken('auth_token', data.token);\n        this.router.navigate(['dashboard', 'portfolio']);\n      },\n      err => {\n        this.submitted = false;\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 400) {\n            this.error = err.error.message[0].message;\n          } else if (err.status === 404) {\n            this.loginForm.controls['password'].reset();\n            this.error = err.error.msg;\n            // calling the snackbar errorhandler\n            this.errorHandler(err, 'Login failed');\n          }\n        }\n      }\n    );\n  }\n  createLoginForm() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    console.error(message);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n\n  // user registration\n  userOnSubmit() {\n    this.regClick = true;\n    this.regError = null;\n    this.authService.createUser(this.userForm.value).subscribe(\n      data => {\n        this.regClick = false;\n        this.success = true;\n        this.verified = false;\n        this.snackBar.open('Registered Successfully', 'Success', {\n          duration: 1000\n        });\n        // storing the generated token\n        // localStorage.setItem('token', data.token);\n      },\n      err => {\n        this.regClick = false;\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 400) {\n            this.regError = err.error.message[0].message;\n          } else {\n           this.regError = err.error.msg;\n           // calling the snackbar errorhandler\n          this.errorHandler(err, 'Registration failed');\n          }\n        }\n      }\n    );\n  }\n\n  createUserForm() {\n    this.userForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      businessname: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: ['', Validators.required],\n      sex: ['', Validators.required],\n      dob: ['', Validators.required],\n      country: [{}, Validators.required],\n      address: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n      oath: [false, Validators.requiredTrue]\n    });\n  }\n\n  createTokenForm() {\n    this.tokenForm = this.fb.group({\n      token: ['', Validators.required],\n    });\n  }\n\n  verifyMe() {\n    this.verifyClick = true;\n    const body = {\n      token: this.tokenForm.value.token,\n      phone: this.userForm.value.phone,\n      country: this.userForm.value.country\n    };\n    this.authService.verifyUser(this.userForm.value.email, body).subscribe(\n      data => {\n        this.verifyClick = false;\n        this.verified = true;\n        this.snackBar.open('Verification Successful', 'Success', {\n          duration: 1000\n        });\n      },\n      err => {\n        this.verifyClick = false;\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 400) {\n            this.verifyError = err.error.message[0].message;\n          } else {\n           this.verifyError = err.error.msg;\n           // calling the snackbar errorhandler\n          this.errorHandler(err, 'Verification failed');\n          }\n        }\n      }\n    );\n  }\n  resetForm() {\n    this.success = false;\n    this.regError = null;\n    this.userForm.reset();\n  }\n  terms() {\n    this.dialog.open(TermsComponent, {\n      autoFocus: false\n    });\n  }\n  forgetPassword() {\n    this.dialog.open(ForgetPasswordComponent, {\n      autoFocus: false\n    });\n  }\n  btnClick() {\n    this.BtnClick = true;\n  }\n}\n","<mat-toolbar class=\"header\"><h5>Password Reset</h5></mat-toolbar>\r\n<mat-card>\r\n  <div *ngIf=\"success == false\">\r\n    <img src=\"../../../../assets/images/logo.png\" width=\"100px\" class=\"user-avatar\" />\r\n    <h2>{{fullname}}</h2>\r\n    <form class=\"form-container\" [formGroup]=\"passwordForm\" (ngSubmit)=\"onSubmit()\">\r\n      <mat-form-field color=\"accent\">\r\n        <i matPrefix class=\"fas fa-unlock-alt\">&nbsp;</i>\r\n        <input #nPass matInput minlength=\"8\" placeholder=\"New Password\" type=\"password\" formControlName=\"newPassword\">\r\n        <mat-hint align=\"end\">Minimum of 8 characters</mat-hint>\r\n        <mat-error *ngIf=\"passwordForm.controls.newPassword.invalid && passwordForm.controls.newPassword.touched\">Enter a valid 8 character(minimum) password</mat-error>\r\n      </mat-form-field><br>\r\n\r\n      <mat-form-field color=\"accent\">\r\n        <i matPrefix class=\"fas fa-key\">&nbsp;</i>\r\n        <input #cPass minlength=\"8\" matInput placeholder=\"Confirm Password\" type=\"password\" formControlName=\"confirmPassword\">\r\n        <mat-hint align=\"end\">Re-type password.</mat-hint>\r\n        <mat-error *ngIf=\"passwordForm.controls.confirmPassword.invalid && passwordForm.controls.confirmPassword.touched\">comfirm password is\r\n          required</mat-error>\r\n      </mat-form-field><br>\r\n      <button mat-raised-button [disabled]=\"click == true || !passwordForm.valid\" type=\"submit\" color=\"accent\">\r\n        Reset\r\n      </button>\r\n    </form>\r\n  </div>\r\n  <div *ngIf=\"success == true\">\r\n    <div class=\"success\">\r\n      <i>Password reset successful, proceed to login.</i>\r\n    </div>\r\n    <button mat-raised-button routerLink=\"/home\" color=\"accent\">\r\n      login\r\n    </button>\r\n  </div><br>\r\n  <span *ngIf=\"click == true\">\r\n    <mat-spinner [diameter]=\"20\"></mat-spinner>\r\n  </span>\r\n  <div class=\"error\" *ngIf=\"sendError && success == false\">\r\n    <i>{{sendError}}</i>\r\n  </div><br>\r\n</mat-card>","\n  <mat-dialog-content>\n    <mat-card>\n      <form *ngIf=\"success == false\"\n      class=\"form-container\" [formGroup]=\"emailForm\" novalidate\n      (ngSubmit)=\"onSubmit()\">\n        <h3> Forget password? </h3>\n        <mat-form-field color=\"primary\">\n          <input matInput type=\"email\" placeholder=\"Enter Registered Email\" formControlName=\"email\">\n          <mat-error *ngIf=\"emailForm.controls.email.invalid && emailForm.controls.email.touched\">enter a valid email address</mat-error>\n        </mat-form-field>\n        <button mat-raised-button [disabled]=\"click == true || !emailForm.valid\" type=\"submit\" color=\"accent\">Submit</button>\n        <button mat-raised-button type=\"reset\" [mat-dialog-close]=\"false\">Close</button>\n      </form>\n      <div class=\"success\" *ngIf=\"success == true\">\n        <i>Success! A password reset link has been sent to {{emailForm.controls.email.value}}<br>Check your mail inbox or spam to reset your password and access your portfolio.<br>Note: Your email may take a few minutes to arrive.</i>\n      </div><br>\n      <span *ngIf=\"click == true\">\n        <mat-spinner [diameter]=\"20\"></mat-spinner>\n      </span>\n      <div class=\"error\" *ngIf=\"sendError && success == false\">\n        <i>{{sendError}}</i>\n      </div><br>\n    </mat-card>\n  </mat-dialog-content>\n  ","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UsersService } from '../shared/services/users.service';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss']\n})\nexport class PasswordComponent implements OnInit {\n  passwordForm: FormGroup;\n  token: any;\n  fullname: string;\n  success: Boolean = false;\n  sendError: String;\n  click: Boolean = false;\n\n  constructor(private fb: FormBuilder,\n    public authService: AuthService,\n    public userService: UsersService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.fullname = this.route.snapshot.params.fullname;\n    this.token = this.route.snapshot.params.token;\n    this.createForm();\n  }\n  onSubmit() {\n    this.click = true;\n    this.sendError = null;\n    this.userService.resetPassword(this.token, this.passwordForm.value).subscribe(\n      data => {\n        this.click = false;\n        this.success = true;\n      },\n      err => {\n        this.click = false;\n        this.success = false;\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 400) {\n            this.sendError = err.error.msg[0].message;\n          } else {\n           this.sendError = err.error.msg;\n        }\n        }\n      });\n  }\n  // form builder model\n  private createForm() {\n    this.passwordForm = this.fb.group({\n      newPassword: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    });\n  }\n}\n\n\n// forget password component\n@Component({\n  selector: 'app-forget-password',\n  template: `\n  <mat-dialog-content>\n    <mat-card>\n      <form *ngIf=\"success == false\"\n      class=\"form-container\" [formGroup]=\"emailForm\" novalidate\n      (ngSubmit)=\"onSubmit()\">\n        <h3> Forget password? </h3>\n        <mat-form-field color=\"primary\">\n          <input matInput type=\"email\" placeholder=\"Enter Registered Email\" formControlName=\"email\">\n          <mat-error *ngIf=\"emailForm.controls.email.invalid && emailForm.controls.email.touched\">enter a valid email address</mat-error>\n        </mat-form-field>\n        <button mat-raised-button [disabled]=\"click == true || !emailForm.valid\" type=\"submit\" color=\"accent\">Submit</button>\n        <button mat-raised-button type=\"reset\" [mat-dialog-close]=\"false\">Close</button>\n      </form>\n      <div class=\"success\" *ngIf=\"success == true\">\n        <i>Success! A password reset link has been sent to {{emailForm.controls.email.value}}<br>Check your mail inbox or spam to reset your password and access your portfolio.<br>Note: Your email may take a few minutes to arrive.</i>\n      </div><br>\n      <span *ngIf=\"click == true\">\n        <mat-spinner [diameter]=\"20\"></mat-spinner>\n      </span>\n      <div class=\"error\" *ngIf=\"sendError && success == false\">\n        <i>{{sendError}}</i>\n      </div><br>\n    </mat-card>\n  </mat-dialog-content>\n  `,\n  styles: [`\n  .mat-spinner {\n    margin: 10px auto;\n  }\n  .success {\n    color: rgb(6, 252, 149) !important;\n    text-align: center;\n    padding: 2px;\n    border: 5px dotted rgb(6, 252, 149);\n  }\n  .error {\n    color: red !important;\n    text-align: justify;\n    padding: 2px;\n    border: 5px dotted red;\n  }\n  `]\n})\nexport class ForgetPasswordComponent implements OnInit {\n  emailForm: FormGroup;\n  success: Boolean = false;\n  sendError: String;\n  click: Boolean = false;\n\n  constructor(public dialogRef: MatDialogRef<ForgetPasswordComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    public authService: AuthService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n  onSubmit() {\n    this.click = true;\n    this.sendError = null;\n    this.authService.forgetPassword(this.emailForm.value).subscribe(\n      data => {\n        this.click = false;\n        this.success = true;\n      },\n      err => {\n        this.click = false;\n        this.success = false;\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 400) {\n            this.sendError = err.error.msg[0].message;\n          } else {\n           this.sendError = err.error.msg;\n        }\n        }\n      });\n    }\n\n   // form builder model\n   private createForm() {\n    this.emailForm = this.fb.group({\n      email: ['', Validators.required],\n    });\n  }\n}\n","<mat-toolbar> <i>Design ratings & review contest</i> </mat-toolbar>\n<mat-card>\n  <i class=\"far fa-clock\"></i>\n  <h2>Coming Soon</h2>\n  <i\n    >Rate designs of your choice with each qualified designers standing a chance\n    of winning amazing prices including a suprise visit from our team...</i\n  >\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ratings',\n  templateUrl: './ratings.component.html',\n  styleUrls: ['./ratings.component.scss']\n})\nexport class RatingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer>\n  <div>\n    <p>The Designers Network (TDN)</p>\n    <hr />\n    <p class=\"link\">\n      <a (click)=\"terms()\">Terms of Use</a> ||\n      <a (click)=\"feedback()\">Feedback</a>\n    </p>\n    <p>copywrite©{{ currentYear }}</p>\n    <p>Powered by NiexsonTech™</p>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FeedbackComponent } from '../../../feedback/feedback.component';\nimport { TermsComponent } from '../../../terms/terms.component';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  currentYear: number;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {\n    this.currentYear = new Date().getFullYear();\n  }\n  feedback() {\n    this.dialog.open(FeedbackComponent, {\n      autoFocus: false\n    });\n  }\n  terms() {\n    this.dialog.open(TermsComponent, {\n      autoFocus: false\n    });\n  }\n}\n","<mat-card>\n  <img\n    mat-card-image\n    src=\"../../../../assets/images/404Error.png\"\n    alt=\"page not found Error404\"\n  />\n  <div>\n    <h3>It seems you are lost?</h3>\n    <button mat-raised-button color=\"accent\" routerLink=\"/studio\">\n      Explore Studio Designs\n    </button>\n  </div>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit() {}\n}\n","<div class=\"toolbar\">\n  <button\n    color=\"accent\"\n    mat-button\n    (click)=\"toggleSidenav.emit()\"\n    class=\"sidenav-toggle\"\n  >\n    <i class=\"fas fa-bars\"></i>\n  </button>\n  <span class=\"cname\"><i class=\"fas fa-tshirt\"></i> Fastudio </span>\n  <div class=\"action\">\n    <a routerLink=\"/dashboard/enquiries\"\n      ><i\n        class=\"fas fa-bell\"\n        *ngIf=\"authService.loggedIn() && newEnquiries?.length == 0\"\n      ></i\n    ></a>\n    <a routerLink=\"/dashboard/enquiries\"\n      ><i\n        class=\"fas fa-bell\"\n        matBadge=\"{{ newEnquiries.length }}\"\n        matBadgeColor=\"warn\"\n        *ngIf=\"authService.loggedIn() && newEnquiries?.length > 0\"\n      ></i\n    ></a>\n    <a routerLink=\"/dashboard/profile\"\n      ><i class=\"fas fa-user-circle\" *ngIf=\"authService.loggedIn()\"></i\n    ></a>\n  </div>\n</div>\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as io from 'socket.io-client';\nimport { AuthService } from '../../services/auth.service';\nimport { UsersService } from '../../services/users.service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n  socket: any;\n  newEnquiries: any;\n  loggedInUser: any;\n\n  @Output()\n  toggleSidenav = new EventEmitter<void>();\n  constructor(\n    private router: Router,\n    public authService: AuthService,\n    public userService: UsersService\n  ) { this.socket = io(environment.BASE_URL); }\n\n  ngOnInit() {\n    this.loggedInUser = this.authService.getCurrentUser();\n    this.getEnquires();\n    this.socket.on('refreshPage', data => {\n      this.getEnquires();\n    });\n  }\n  getEnquires() {\n    if (this.loggedInUser) {\n      this.userService.getUser(this.loggedInUser._id).subscribe(data => {\n        this.newEnquiries = data.user.enquiries.filter(enquiry => {\n          return enquiry.closed === false;\n        });\n      });\n    }\n    return;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nconst exportedMatModules = [\n  CommonModule,\n  MatPaginatorModule,\n  MatTooltipModule,\n  MatButtonModule,\n  MatIconModule,\n  MatTabsModule,\n  MatRadioModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatTableModule,\n  MatMenuModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatSnackBarModule,\n  MatOptionModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatCardModule,\n  MatGridListModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatBadgeModule\n];\n@NgModule({\n  imports: [CommonModule, ...exportedMatModules],\n  exports: [...exportedMatModules],\n  declarations: []\n})\nexport class MaterialModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private userService: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.userService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/home']);\n      return false;\n    }\n  }\n}\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { User } from '../models/user';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport * as jwt_decode from 'jwt-decode';\nimport { environment } from '../../../environments/environment';\n\n// const BASE_URL = 'http://localhost:3000/v1';\nconst BASE_URL = `${environment.BASE_URL}/v1`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  access_token: any;\n  auth_token: any;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platfrom: Object,\n    private httpClient: HttpClient,\n    private cookieService: CookieService,\n    private router: Router) { }\n\n  createUser(body: User): Observable<any> {\n    return this.httpClient.post<User>(`${BASE_URL}/registerUser`, body);\n  }\n\n  verifyUser(email: string, body: any): Observable<any> {\n    return this.httpClient.post<any>(\n      `${BASE_URL}/verifyMe/user/${email}`,\n      body\n    );\n  }\n\n  loginUser(body: User): Observable<any> {\n    return this.httpClient.post<User>(`${BASE_URL}/login`, body);\n  }\n\n  forgetPassword(body: any): Observable<any> {\n    return this.httpClient.post<any>(`${BASE_URL}/forgetPassword`, body);\n  }\n\n  loggedIn() {\n    if (isPlatformBrowser(this.platfrom)) {\n      return !!localStorage.getItem('auth_token');\n    }\n  }\n  logoutUser() {\n    if (isPlatformBrowser(this.platfrom)) {\n      localStorage.removeItem('auth_token');\n      this.router.navigate(['/home']);\n    }\n  }\n  getCurrentUser() {\n    if (isPlatformBrowser(this.platfrom)) {\n      const token = localStorage.getItem('auth_token');\n      let payload;\n      if (token) {\n        payload = jwt_decode(token);\n        return payload.data;\n      }\n        return;\n    }\n  }\n\n  setToken(token_name, token) {\n    if (isPlatformBrowser(this.platfrom)) {\n      if (token_name === 'access_token') {\n        this.access_token = token;\n      // } else if (token_name === 'auth_token') {\n      //   this.auth_token = token;\n      } else {\n        localStorage.setItem(token_name, token);\n      }\n    }\n  }\n  getToken(token_name) {\n    if (isPlatformBrowser(this.platfrom)) {\n      if (token_name === 'access_token') {\n        return this.access_token;\n      // } else if (token_name === 'auth_token') {\n      //   return this.auth_token;\n      } else {\n        return localStorage.getItem(token_name);\n      }\n    }\n  }\n  deleteToken(token_name) {\n    if (isPlatformBrowser(this.platfrom)) {\n      if (token_name === 'access_token') {\n        this.access_token = null;\n        // } else if (token_name === 'auth_token') {\n        //   this.auth_token = null;\n        } else {\n          localStorage.removeItem(token_name);\n        }\n      }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpBackend } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment';\n\nconst BASE_URL = `${environment.BASE_URL}/v1`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryService {\n  nigeriaStates = [\n    'Abia',\n    'Adamawa',\n    'Anambra',\n    'Akwa Ibom',\n    'Bauchi',\n    'Bayelsa',\n    'Benue',\n    'Borno',\n    'Cross River',\n    'Delta',\n    'Ebonyi',\n    'Enugu',\n    'Edo',\n    'Ekiti',\n    'FCT - Abuja',\n    'Gombe',\n    'Imo',\n    'Jigawa',\n    'Kaduna',\n    'Kano',\n    'Katsina',\n    'Kebbi',\n    'Kogi',\n    'Kwara',\n    'Lagos',\n    'Nasarawa',\n    'Niger',\n    'Ogun',\n    'Ondo',\n    'Osun',\n    'Oyo',\n    'Plateau',\n    'Rivers',\n    'Sokoto',\n    'Taraba',\n    'Yobe',\n    'Zamfara'\n  ];\n  body = {\n    user: 'visitor',\n    origin: 'fastudioNG'\n  };\n\n  private httpClient: HttpClient;\n  constructor(private handler: HttpBackend, private router: Router) {\n    this.httpClient = new HttpClient(handler);\n  }\n\n  requestToken(): Observable<any> {\n    return this.httpClient.post<any>(`${BASE_URL}/giveMeAccess`, this.body);\n  }\n\n  getCountries(): Observable<any> {\n    return this.httpClient.get(\n      'http://restcountries.eu/rest/v2/region/africa?fields=name;callingCodes;currencies;flag;demonym'\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Feedback } from '../models/feedback';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment';\n\n// const BASE_URL = 'http://localhost:3000/v1';\nconst BASE_URL = `${environment.BASE_URL}/v1`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n  constructor(private httpClient: HttpClient, private router: Router) {}\n\n  create(body: Feedback): Observable<any> {\n    return this.httpClient.post<Feedback>(`${BASE_URL}/feedback`, body);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent\n} from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { CountryService } from './country.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n// export class TokenInterceptorService implements HttpInterceptor {\n//   constructor(private injector: Injector) {}\n\n//   intercept(\n//     req: HttpRequest<any>,\n//     next: HttpHandler\n//   ): Observable<HttpEvent<any>> {\n//     const authService = this.injector.get(AuthService);\n//     const headersConfig = {\n//       'Content-Type': 'application/json',\n//       Accept: 'application/json'\n//     };\n//     const token = authService.getToken();\n//     if (token) {\n//       headersConfig['Authorizaton'] = `Bearer ${token}`;\n//       const tokenizedReq = req.clone({ setHeaders: headersConfig });\n//       return next.handle(tokenizedReq);\n//     } else {\n//       return next.handle(req);\n//     }\n//   }\n// }\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const authService = this.injector.get(AuthService);\n    if (authService.getToken('auth_token')) {\n      const tokenizedReq = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${authService.getToken('auth_token')}`\n        }\n      });\n      return next.handle(tokenizedReq);\n    } else if (authService.getToken('access_token')) {\n      // access for visitors\n      const tokenizedReq = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${authService.getToken('access_token')}`\n        }\n      });\n      return next.handle(tokenizedReq);\n    } else {\n      return;\n    }\n  }\n}\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  public access_token;\n  public auth_token;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platfrom: Object,\n    private cookieService: CookieService\n  ) {}\n\n  setToken(token_name, token) {\n    if (isPlatformBrowser(this.platfrom)) {\n      if (token_name === 'access_token') {\n        this.access_token = token;\n      } else if (token_name === 'auth_token') {\n        this.auth_token = token;\n      } else {\n        localStorage.setItem(token_name, token);\n      }\n    }\n  }\n  getToken(token_name) {\n    if (isPlatformBrowser(this.platfrom)) {\n      if (token_name === 'access_token') {\n        return this.access_token;\n      } else if (token_name === 'auth_token') {\n        return this.auth_token;\n      } else {\n        localStorage.getItem(token_name);\n      }\n    }\n  }\n  deleteToken(token_name) {\n    if (isPlatformBrowser(this.platfrom)) {\n      if (token_name === 'access_token') {\n        this.access_token = null;\n      } else if (token_name === 'auth_token') {\n        this.auth_token = null;\n      } else {\n        localStorage.removeItem(token_name);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment';\n\n// const BASE_URL = 'http://localhost:3000/v1';\nconst BASE_URL = `${environment.BASE_URL}/v1`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  constructor(private httpClient: HttpClient, private router: Router) {}\n  getDesigners(): Observable<any> {\n    return this.httpClient.get<User>(`${BASE_URL}/users/all/designers`);\n  }\n  getUser(id): Observable<any> {\n    return this.httpClient.get<User>(`${BASE_URL}/users/${id}`);\n  }\n  getUserByEmail(email): Observable<any> {\n    return this.httpClient.get<User>(`${BASE_URL}/users/email/${email}`);\n  }\n  resetPassword(token: any, body: any): Observable<any> {\n    return this.httpClient.put(`${BASE_URL}/users/passwordReset/${token}`, body);\n  }\n  updateUser(id: string, body: any): Observable<User> {\n    return this.httpClient.put<User>(`${BASE_URL}/users/${id}`, body);\n  }\n  changePassword(id: string, body: any): Observable<User> {\n    return this.httpClient.post<User>(\n      `${BASE_URL}/updatePassword/userId/${id}`,\n      body\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './modules/material.module';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\nconst exportedSharedModules = [\n  MaterialModule,\n  FileUploadModule,\n  Ng2SearchPipeModule\n];\n@NgModule({\n  declarations: [\n    FooterComponent,\n    NotFoundComponent,\n    SidenavComponent,\n    ToolbarComponent\n  ],\n  imports: [CommonModule, RouterModule, ...exportedSharedModules],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FooterComponent,\n    NotFoundComponent,\n    SidenavComponent,\n    ToolbarComponent,\n    ...exportedSharedModules\n  ]\n})\nexport class SharedModule {}\n","<button mat-button \nclass=\"close\" \n(click)=\"closeBtn()\" \nmatTooltip=\"close design review\">\n  <i class=\"fas fa-times\">&nbsp;close</i>\n</button>\n<mat-dialog-content>\n  <mat-card>\n    <mat-toolbar>\n      <h3>Terms of Use!</h3>\n    </mat-toolbar>\n    <p>Please read these Terms of Use carefully before using this platform operated by Niexson Technologies.</p>\n    <p>Your access to and use of the service is conditioned on your acceptable of and compliance with these Terms. These Terms apply to all visitors, users and others who access or use the service.</p>\n    <p>By accessing or using the service you agree to be bound by these Terms. If you diagree with any part of the terms then you may not access the service.</p>\n    <div class=\"terms\">\n      <h3>As a Designer</h3>\n      <ul>\n        <li>You agree that the designs you upload originated solely from you.</li>\n        <li>Seek permission from any face(s) that may appear on your designs before uploading as the fastudio team will not be responsible for any privacy issues that may arise from the use of such design.</li>\n        <li>Do not charge a client for a design unless the design is completed. You are only permitted to charge a client for design material if and only if the client does not have a material.</li>\n        <li>You must be ready to deliever a clients design on or before the agreed due date.</li>\n      </ul>\n      <i>NB: Fastudio team has the right to terminate a designers account without notice for terms of use violation.</i>\n    </div>\n    <div class=\"terms\">\n      <h3>As a visitor/client</h3>\n      <ul>\n        <li>Do not pay a designer until your design is completed but you are expected to pay for the design material if the need arises as fastudio will not be responsible for any form of fraud.</li>\n        <li>You agree to pay the agreed price for a design without reservation upon design completion.</li>\n      </ul>\n      <i>NB: Report any form of fraud or violation that is within the terms of use.</i>\n    </div>\n  </mat-card>\n</mat-dialog-content>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<TermsComponent>,\n  ) { }\n\n  ngOnInit() {\n  }\n  closeBtn() {\n    this.dialogRef.close();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  locked: false,\n  BASE_URL: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n","/* (ignored) */"],"sourceRoot":""}