{"version":3,"sources":["./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.component.ts.DashboardComponent.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/designers-forum/designers-forum.component.html","./src/app/dashboard/designers-forum/designers-forum.component.ts","./src/app/dashboard/designers-forum/designers-forum.module.ts","./src/app/dashboard/enquiries/components/enquiries-details/enquiries-details.component.html","./src/app/dashboard/enquiries/components/enquiries-details/enquiries-details.component.ts","./src/app/dashboard/enquiries/components/enquiries-listing/enquiries-listing.component.html","./src/app/dashboard/enquiries/components/enquiries-listing/enquiries-listing.component.ts.ConfirmCloseComponent.html","./src/app/dashboard/enquiries/components/enquiries-listing/enquiries-listing.component.ts.DeleteEnquiryComponent.html","./src/app/dashboard/enquiries/components/enquiries-listing/enquiries-listing.component.ts","./src/app/dashboard/enquiries/enquiries.module.ts","./src/app/dashboard/portfolio/components/design-form/design-form.component.html","./src/app/dashboard/portfolio/components/design-form/design-form.component.ts","./src/app/dashboard/portfolio/components/designs/designs.component.html","./src/app/dashboard/portfolio/components/designs/designs.component.ts.DeleteDesignComponent.html","./src/app/dashboard/portfolio/components/designs/designs.component.ts","./src/app/dashboard/portfolio/portfolio.module.ts","./src/app/dashboard/profile/components/edit-profile/edit-profile.component.html","./src/app/dashboard/profile/components/edit-profile/edit-profile.component.ts.ChangePasswordComponent.html","./src/app/dashboard/profile/components/edit-profile/edit-profile.component.ts","./src/app/dashboard/profile/profile.component.html","./src/app/dashboard/profile/profile.component.ts","./src/app/dashboard/profile/profile.module.ts","./src/app/shared/services/design.service.ts","./src/app/shared/services/enquiry.service.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { DesignsComponent } from './portfolio/components/designs/designs.component';\r\nimport { EnquiriesListingComponent } from './enquiries/components/enquiries-listing/enquiries-listing.component';\r\nimport { NotFoundComponent } from '../shared/components/not-found/not-found.component';\r\nimport { DesignersForumComponent } from './designers-forum/designers-forum.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'portfolio'\r\n      },\r\n      {\r\n        path: 'enquiries',\r\n        component: EnquiriesListingComponent\r\n      },\r\n      {\r\n        path: 'portfolio',\r\n        component: DesignsComponent\r\n      },\r\n      {\r\n        path: 'designers-forum',\r\n        component: DesignersForumComponent\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent\r\n      },\r\n      {\r\n        path: '**',\r\n        component: NotFoundComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {}\r\n","\n    <router-outlet></router-outlet>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n  styles: [``]\n})\nexport class DashboardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { DesignersForumModule } from './designers-forum/designers-forum.module';\nimport { PortfolioModule } from './portfolio/portfolio.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { EnquiriesModule } from './enquiries/enquiries.module';\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    DesignersForumModule,\n    PortfolioModule,\n    ProfileModule,\n    EnquiriesModule,\n    DashboardRoutingModule\n  ]\n})\nexport class DashboardModule {}\n","<mat-toolbar> <h3>Designers Forum</h3> </mat-toolbar>\n<mat-card>\n  <i matPrefix class=\"fas fa-user-lock\"></i><br />\n  <h4>Forum is currently locked!</h4>\n  <h4>\n    Keep updating your portfolio with your stunning designs and do check back\n    later.\n  </h4>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-designers-forum',\n  templateUrl: './designers-forum.component.html',\n  styleUrls: ['./designers-forum.component.scss']\n})\nexport class DesignersForumComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DesignersForumComponent } from './designers-forum.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [DesignersForumComponent],\n  imports: [\n    CommonModule,\n    SharedModule\n  ]\n})\nexport class DesignersForumModule { }\n","<button mat-button class=\"close\" (click)=\"closeBtn()\" matTooltip=\"close enquiry review\">\n  <i class=\"fas fa-times\">&nbsp;close</i>\n</button>\n<mat-dialog-content>\n  <mat-spinner [diameter]=\"20\" *ngIf=\"!enquiry\"></mat-spinner>\n  <mat-card *ngIf=\"enquiry\">\n    <img class=\"img\" src=\"{{enquiry.design.imgUrl}}\" alt=\"{{enquiry.design.category}}\" />\n    <h5>Worth:&nbsp;<i>{{enquiry.design.priceWorth | number}}&nbsp;{{userData.country.currencies[0].code}}</i></h5>\n    <mat-card-content class=\"design\">\n      <p><i>{{ enquiry.design.description }}</i></p>\n    </mat-card-content>\n    <mat-card-actions class=\"det\">\n      <h4>Client Details:</h4>\n      <i class=\"fas fa-user-circle\">&nbsp;{{ enquiry.client }}</i><br>\n      <i class=\"fas fa-bullseye\">&nbsp;{{ enquiry.gender + ' ' + '-' + ' ' + 'Size ' + enquiry.size }}</i><br>\n      <i class=\"fas fa-mobile-alt\">&nbsp;{{ '+' + enquiry.country.callingCodes[0] + enquiry.phone }}</i><br>\n      <i class=\"fas fa-map-marker-alt\">&nbsp;{{ enquiry.address }}</i><br>\n      <i class=\"far fa-clock\">&nbsp;{{ 'Submitted' + ' ' + TimeFromNow(enquiry.created) }}</i>\n      <i *ngIf=\"enquiry.completed != null\" class=\"fas fa-check\">&nbsp;{{ 'Completed' + ' ' + TimeFromNow(enquiry.completed) }}</i><br>\n      <h4>Message:&nbsp;</h4><i>{{ enquiry.message}}</i>\n    </mat-card-actions>\n  </mat-card>\n</mat-dialog-content>\n<div *ngIf=\"!enquiry.completed\" class=\"notice\">\n  NB: contact your client as soon as possible to validate details!\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as io from 'socket.io-client';\nimport * as moment from 'moment';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-enquiries-details',\n  templateUrl: './enquiries-details.component.html',\n  styleUrls: ['./enquiries-details.component.scss']\n})\nexport class EnquiriesDetailsComponent implements OnInit {\n  socket: any;\n  enquiry: any;\n  userData: any;\n\n  constructor(public dialogRef: MatDialogRef<EnquiriesDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    ) { this.socket = io(environment.BASE_URL); }\n\n  ngOnInit() {\n    if (!this.data) {\n      return;\n    }\n    this.userData = this.data.userData;\n    this.enquiry = this.data.enquiry;\n  }\n  closeBtn() {\n    this.socket.emit('refresh', {});\n    this.dialogRef.close();\n  }\n    // moment time\n   TimeFromNow(time) {\n    return moment(time).fromNow();\n  }\n}\n","<mat-toolbar class=\"header\">\n  <h3>Enquiries</h3>\n</mat-toolbar>\n<mat-form-field>\n  <i matPrefix class=\"fas fa-search\">&nbsp;</i>\n  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n</mat-form-field>\n<section>\n  <mat-spinner class=\"loading\" color=\"accent\" [diameter]=\"30\" *ngIf=\"dataSource == null\"></mat-spinner>\n  <mat-card class=\"empty\" *ngIf=\"length == 0\">\n    <h5>There are no enquiries yet, share your public portfolio link from your profile with family and friends to get started.</h5>\n  </mat-card>\n  <div *ngIf=\"dataSource != null && length != 0\" class=\"table-container mat-elevation-z8\">\n    <mat-table [dataSource]=\"dataSource\">\n\n      <!-- client Column -->\n      <ng-container matColumnDef=\"client\">\n        <mat-header-cell *matHeaderCellDef> Client </mat-header-cell>\n        <mat-cell class=\"client\" *matCellDef=\"let enquiry\">\n          <div class=\"name\">\n            <span><i class=\"far fa-square\" aria-hidden=\"true\">&nbsp;</i></span>{{ enquiry.client }}\n          </div>\n        </mat-cell>\n      </ng-container>\n\n      <!-- category Column -->\n      <ng-container matColumnDef=\"class\">\n        <mat-header-cell *matHeaderCellDef> Class </mat-header-cell>\n        <mat-cell *matCellDef=\"let enquiry\">{{ 'Size' + '-' + enquiry.size }}</mat-cell>\n      </ng-container>\n\n      <!-- status Column -->\n      <ng-container matColumnDef=\"status\">\n        <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\n        <mat-cell *matCellDef=\"let enquiry\">\n          <span class=\"warn\" *ngIf=\"enquiry.closed === false\">\n            <i>pending...</i>\n          </span>\n          <span class=\"accent\" *ngIf=\"enquiry.closed === true\">\n            <i>completed.</i>\n          </span>\n        </mat-cell>\n      </ng-container>\n\n      <!-- Action Column -->\n      <ng-container matColumnDef=\"action\">\n        <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\n        <mat-cell *matCellDef=\"let enquiry\">\n          <button mat-icon-button class=\"action\" [matMenuTriggerFor]=\"menu\">\n            <i class=\"fa fa-ellipsis-v\" aria-hidden=\"true\"></i>\n          </button>\n          <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button mat-menu-item color=\"primary\"\n            (click)=\"detailsBtnHandler(enquiry)\"\n            matTooltip=\"Open details\">\n              <i class=\"far fa-caret-square-down\" aria-hidden=\"true\">&nbsp;Open</i>\n            </button>\n            <button mat-menu-item color=\"accent\" \n            *ngIf=\"enquiry.closed === false\"\n            (click)=\"closeBtnHandler(enquiry.enquiryId)\"\n            matTooltip=\"Close completed enquiry\">\n              <i class=\"far fa-check-circle\" aria-hidden=\"true\">&nbsp;Close</i>\n            </button>\n            <button mat-menu-item color=\"accent\" \n            *ngIf=\"enquiry.closed === false\"\n            (click)=\"deleteBtnHandler(enquiry.enquiryId)\"\n            matTooltip=\"Close completed enquiry\">\n              <i class=\"far fa-trash-alt\" aria-hidden=\"true\">&nbsp;Delete</i>\n            </button>\n          </mat-menu>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n    <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"[10, 20, 30, 40, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n</section>","\n  <h1 mat-dialog-title>Design Completed</h1>\n  <div mat-dialog-content>\n    <p>You are about to close this enquiry?</p>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=onNoClick()>No Thanks</button>\n    <button mat-button (click)=onYesClick()>Yes</button>\n  </div>\n  ","\n  <h1 mat-dialog-title>Delete!</h1>\n  <div mat-dialog-content>\n    <p>Delete this enquiry?</p>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=onNoClick()>No Thanks</button>\n    <button mat-button (click)=onYesClick()>Yes</button>\n  </div>\n  ","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport * as io from 'socket.io-client';\nimport _ from 'lodash';\nimport { AuthService } from '../../../../shared/services/auth.service';\nimport { UsersService } from '../../../../shared/services/users.service';\nimport { EnquiryService } from '../../../../shared/services/enquiry.service';\nimport { Enquiry } from '../../../../shared/models/enquiry';\nimport { EnquiriesDetailsComponent } from '../enquiries-details/enquiries-details.component';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-enquiries-listing',\n  templateUrl: './enquiries-listing.component.html',\n  styleUrls: ['./enquiries-listing.component.scss']\n})\nexport class EnquiriesListingComponent implements OnInit {\n  socket: any;\n  loading: Boolean = true;\n  loggedInUser: any;\n  displayedColumns: string[] = ['client', 'class', 'status', 'action'];\n  dataSource: MatTableDataSource<Enquiry>;\n  length: number;\n\n  constructor(private enquiryService: EnquiryService,\n              private userService: UsersService,\n              private authService: AuthService,\n              private router: Router,\n              private snackBar: MatSnackBar,\n              public dialog: MatDialog\n            ) { this.socket = io(environment.BASE_URL); }\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  // @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit() {\n    this.loggedInUser = this.authService.getCurrentUser();\n    this.getEnquires();\n    this.socket.on('refreshPage', data => {\n      this.getEnquires();\n    });\n  }\n\n  getEnquires() {\n    if (this.loggedInUser) {\n      this.userService.getUser(this.loggedInUser._id).subscribe(\n        data => {\n          this.loading = false;\n          this.dataSource = new MatTableDataSource(data.user.enquiries.sort( (a, b) => {\n            return (a.closed === b.closed) ? 0 : a.closed ? -1 : 1;\n          }).reverse());\n          this.dataSource.paginator = this.paginator;\n          this.length = data.user.enquiries.length;\n        },\n        err => {\n          this.loading = false;\n          if (err instanceof HttpErrorResponse) {\n            if (err.status === 401) {\n              this.router.navigate(['/home']);\n            } else {\n              // calling the snackbar errorhandler\n              this.errorHandler(err, 'failed to get enquiries');\n            }\n          }\n        },\n      );\n    }\n    return;\n  }\n\n  // filtering table data\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n   // dialog to open details\n   detailsBtnHandler(_enquiry) {\n    this.dialog.open(EnquiriesDetailsComponent, {\n      data: { enquiry: _enquiry, userData: this.loggedInUser },\n      width: '600px',\n    });\n  }\n  // close an enquiry\n  closeBtnHandler(_id) {\n    this.dialog.open(ConfirmCloseComponent, {\n      data: { id: _id },\n      width: '250px'\n    });\n  }\n  // delete an enquiry\n  deleteBtnHandler(_id) {\n    this.dialog.open(DeleteEnquiryComponent, {\n      data: { id: _id },\n      width: '250px'\n    });\n  }\n\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    console.error(message);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n}\n\n// confirm close\n@Component({\n  selector: 'app-confirm-close',\n  template: `\n  <h1 mat-dialog-title>Design Completed</h1>\n  <div mat-dialog-content>\n    <p>You are about to close this enquiry?</p>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=onNoClick()>No Thanks</button>\n    <button mat-button (click)=onYesClick()>Yes</button>\n  </div>\n  `,\n  styles: [``]\n})\nexport class ConfirmCloseComponent implements OnInit {\n  socket: any;\n\n  constructor(public dialogRef: MatDialogRef<ConfirmCloseComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private enquiryService: EnquiryService,\n    private snackBar: MatSnackBar,\n    ) { this.socket = io(environment.BASE_URL); }\n\n  ngOnInit() {\n  }\n  onNoClick() {\n    this.socket.emit('refresh', {});\n    this.dialogRef.close();\n  }\n  onYesClick() {\n    const body = {\n      closed: true\n    };\n    this.enquiryService.updateEnquiry(this.data.id, body).subscribe(\n      data => {\n        this.snackBar.open('Enquiry closed successsfully', 'Completed', {\n          duration: 2000\n        });\n        this.socket.emit('refresh', {});\n        this.dialogRef.close();\n      },\n      err => {\n        this.errorHandler(err, 'Failed to close enquiry');\n      }\n    );\n  }\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    console.error(message);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n}\n\n// confirm delete\n@Component({\n  selector: 'app-delete-enquiry',\n  template: `\n  <h1 mat-dialog-title>Delete!</h1>\n  <div mat-dialog-content>\n    <p>Delete this enquiry?</p>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=onNoClick()>No Thanks</button>\n    <button mat-button (click)=onYesClick()>Yes</button>\n  </div>\n  `,\n  styles: [``]\n})\nexport class DeleteEnquiryComponent implements OnInit {\n  socket: any;\n\n  constructor(public dialogRef: MatDialogRef<DeleteEnquiryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private enquiryService: EnquiryService,\n    private snackBar: MatSnackBar,\n    ) { this.socket = io(environment.BASE_URL); }\n\n  ngOnInit() {\n  }\n  onNoClick() {\n    this.socket.emit('refresh', {});\n    this.dialogRef.close();\n  }\n  onYesClick() {\n    this.enquiryService.deleteEnquiry(this.data.id).subscribe(\n      data => {\n        this.snackBar.open('Enquiry deleted successsfully', 'Completed', {\n          duration: 2000\n        });\n        this.socket.emit('refresh', {});\n        this.dialogRef.close();\n      },\n      err => {\n        this.errorHandler(err, 'Failed to delete enquiry');\n      }\n    );\n  }\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    console.error(message);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  EnquiriesListingComponent,\n  ConfirmCloseComponent,\n  DeleteEnquiryComponent\n} from './components/enquiries-listing/enquiries-listing.component';\nimport { EnquiriesDetailsComponent } from './components/enquiries-details/enquiries-details.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    EnquiriesListingComponent,\n    EnquiriesDetailsComponent,\n    ConfirmCloseComponent,\n    DeleteEnquiryComponent\n  ],\n  imports: [CommonModule, SharedModule],\n  entryComponents: [EnquiriesDetailsComponent, ConfirmCloseComponent, DeleteEnquiryComponent]\n})\nexport class EnquiriesModule {}\n","<mat-dialog-content>\n  <mat-card>\n    <h5>Select design Image</h5>\n    <form class=\"form-container\" [formGroup]=\"designForm\" novalidate (ngSubmit)=\"onSubmit()\">\n      <input [disabled]=\"data\" type=\"file\" accept=\"image/*\" ng2FileSelect [uploader]=\"uploader\" (onFileSelected)=\"OnFileSelected($event)\" />\n      <mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>\n      <i>NB: Seek permission from any face(s) that appears on your design before uploading for privacy reasons.</i>\n      <mat-form-field color=\"primary\">\n        <input matInput placeholder=\"Description\" formControlName=\"description\">\n        <mat-error *ngIf=\"designForm.controls.description.invalid && designForm.controls.description.touched\">enter a brief design description</mat-error>\n      </mat-form-field>\n  \n      <mat-form-field color=\"primary\">\n        <mat-select formControlName=\"category\" placeholder=\"Select Category\">\n          <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n            {{category}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n  \n      <mat-form-field color=\"primary\">\n        <mat-select formControlName=\"subCategory\" placeholder=\"Select sub Category\">\n          <mat-option *ngFor=\"let subCategory of subCategories\" [value]=\"subCategory\">\n            {{subCategory}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n  \n      <mat-form-field color=\"primary\">\n        <mat-select formControlName=\"gender\" placeholder=\"Select Gender\">\n          <mat-option *ngFor=\"let gender of genders\" [value]=\"gender\">\n            {{gender}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n  \n      <mat-form-field color=\"primary\">\n        <!-- <span matPrefix>{{design?.designerCountry.currencies[0].symbol}}&nbsp;</span> -->\n        <input type=\"number\" matInput placeholder=\"Price-Worth\" formControlName=\"priceWorth\">\n        <span matSuffix>.00</span>\n        <mat-hint align=\"end\">Enter price in your local currency</mat-hint>\n      </mat-form-field>\n      <mat-error *ngIf=\"regError\">{{ regError }}</mat-error>\n      <span *ngIf=\"regClick == true\">\n        <mat-spinner [diameter]=\"20\"></mat-spinner>\n      </span>\n      <div>\n        <button mat-raised-button [disabled]=\"regClick == true || !designForm.valid\" type=\"submit\" color=\"accent\">Save</button>\n        <button mat-raised-button type=\"reset\" [mat-dialog-close]=\"false\">Cancel</button>\n      </div>\n    </form>\n  </mat-card>\n</mat-dialog-content>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DesignService } from '../../../../shared/services/design.service';\nimport * as io from 'socket.io-client';\nimport { FileUploader, FileSelectDirective } from 'ng2-file-upload';\nimport { environment } from '../../../../../environments/environment';\n\n// const URL = 'http://localhost:3000/v1/designs';\nconst URL = `${environment.BASE_URL}/v1/designs`;\n@Component({\n  selector: 'app-design-form',\n  templateUrl: './design-form.component.html',\n  styleUrls: ['./design-form.component.scss'],\n})\nexport class DesignFormComponent implements OnInit {\n  uploader: FileUploader = new FileUploader({\n    url: URL,\n    disableMultipart: true\n  });\n  regError: string;\n  regClick: Boolean = false;\n  design: any;\n  socket: any;\n  designForm: FormGroup;\n  categories = [\n    'Senator Style',\n    'Agbada Style',\n    'Kaftan Style',\n    'Ankara Style',\n    'Kente Style',\n    'Iro and Buba Style',\n    'Wedding Style',\n    'English Style',\n    'Simple Style',\n    'Others'\n  ];\n  subCategories = [\n    'Adult',\n    'Teenager',\n    'Kiddies'\n  ];\n  genders = [\n    'Male',\n    'Female',\n    'Unisex'\n  ];\n  selectedFile: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<DesignFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    public designService: DesignService,\n    private route: ActivatedRoute,\n    ) {\n      this.socket = io(environment.BASE_URL);\n    }\n\n  ngOnInit() {\n    this.createForm();\n    this.setDesignToForm();\n  }\n  onSubmit() {\n    this.regClick = true;\n    this.regError = null;\n    const body = {\n      image: this.selectedFile,\n      description: this.designForm.value.description,\n      category: this.designForm.value.category,\n      subCategory: this.designForm.value.subCategory,\n      gender: this.designForm.value.gender,\n      priceWorth: this.designForm.value.priceWorth\n     };\n    // user wants to update design\n    if (this.design) {\n      this.designService.updateDesign(this.design._id, body).subscribe(\n        data => {\n          this.socket.emit('refresh', {});\n          this.snackBar.open('Design Updated', 'Success', {\n            duration: 2000\n          });\n          this.dialogRef.close();\n        },\n        err => {\n          this.regClick = true;\n          if (err instanceof HttpErrorResponse) {\n            if (err.status === 400) {\n              this.regError = err.error.msg[0].message;\n            } else {\n             this.regError = err.error.msg;\n             // calling the snackbar errorhandler\n            this.errorHandler(err, 'failed to update');\n            }\n          }\n        }\n      );\n    } else {\n      this.designService.createDesign(body).subscribe(\n        data => {\n          this.regClick = false;\n          this.socket.emit('refresh', {});\n          this.snackBar.open('Design created', 'Success', {\n            duration: 2000\n          });\n          this.dialogRef.close();\n        },\n        err => {\n          this.regClick = false;\n          if (err instanceof HttpErrorResponse) {\n            if (err.status === 400) {\n              this.regError = err.error.msg[0].message;\n            } else {\n             this.regError = err.error.msg;\n             // calling the snackbar errorhandler\n            this.errorHandler(err, 'Failed to create design');\n            }\n          }\n        }\n      );\n    }\n  }\n  // image upload method start\n  ReadAsBase64(file): Promise<any> {\n    const reader = new FileReader();\n    const fileValue = new Promise((resolve, reject) => {\n      reader.addEventListener('load', () => {\n        resolve(reader.result);\n      });\n      reader.addEventListener('error', event => {\n        reject(event);\n      });\n      reader.readAsDataURL(file);\n    });\n    return fileValue;\n  }\n  OnFileSelected(event) {\n    const file: File = event[0];\n    this.ReadAsBase64(file)\n    .then(result => {\n      this.selectedFile = result;\n    })\n    .catch(err => console.log(err));\n  }\n  // image upload method ends\n\n  private setDesignToForm() {\n    if (!this.data) {\n      return;\n    }\n    const id = this.data.id;\n    this.designService.getDesign(id).subscribe(data => {\n      this.design = data.design;\n      this.designForm.patchValue(this.design);\n    },\n    // calling the snackbar errorhandler\n    err => this.errorHandler(err, 'Failed to get design'));\n  }\n  // form builder model\n  private createForm() {\n    this.designForm = this.fb.group({\n      description: ['', Validators.required],\n      category: ['', Validators.required],\n      subCategory: ['', Validators.required],\n      gender: ['', Validators.required],\n      priceWorth: ['', Validators.required]\n    });\n  }\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    console.error(message);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n}\n","<mat-toolbar class=\"header\">\n  <h2>Portfolio Designs<span>{{userData?.designs.length}}</span></h2>\n  <button mat-mini-fab color=\"accent\" (click)=\"openDesignForm()\">\n    <i class=\"fas fa-plus\"></i>\n  </button>\n</mat-toolbar>\n<mat-toolbar>\n  <mat-form-field color=\"primary\">\n    <i matPrefix class=\"fas fa-search\">&nbsp;</i>\n    <input matInput placeholder=\"Search\" [(ngModel)]=\"search\" />\n  </mat-form-field>\n</mat-toolbar>\n<section>\n  <mat-spinner class=\"loading\" [diameter]=\"30\" *ngIf=\"loading == true\" color=\"accent\"></mat-spinner>\n  <mat-card class=\"empty\" *ngIf=\"loading == false && designs.length == 0\">\n    <h5>Portfolio is currently empty! click the add button to start uploading your designs</h5>\n  </mat-card>\n  <section *ngIf=\"designs.length != 0\">\n    <mat-card class=\"designs\" *ngFor=\"let design of designs | filter:search\">\n      <div class=\"row\">\n        <img\n          class=\"img cols\"\n          src=\"http://res.cloudinary.com/niexsontech/image/upload/w_150,h_150,c_pad,b_white/v{{design?.imgVersion}}/{{design?.imgId}}\"\n          alt=\"{{design.description}}\"\n        />\n        <mat-card-content class=\"cols\">\n          <p><i>{{ design.description }}</i></p>\n          <h3>{{ design.category }}</h3>\n          <h4>{{ TimeFromNow(design.created) }}</h4>\n          <h5><i>{{design.priceWorth | number}}&nbsp;{{userData?.country.currencies[0].code}}</i></h5>\n        </mat-card-content>\n      </div>\n      <mat-card-actions align=\"end\">\n        <button mat-icon-button (click)=\"editBtnHandler(design._id)\">\n          <i class=\"far fa-edit\"></i>\n        </button>\n        <button mat-icon-button (click)=\"deleteBtnHandler(design._id)\"> \n          <i class=\"far fa-trash-alt\"></i>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n    <div class=\"more\">\n      <mat-spinner [diameter]=\"20\" *ngIf=\"spinner == true\"></mat-spinner>\n      <button *ngIf=\"all == false\" mat-stroked-button color=\"primary\" (click)=\"openMore()\">load More...</button>\n    </div>\n  </section>\n</section>\n\n","\n  <h1 mat-dialog-title>Delete!</h1>\n  <div mat-dialog-content>\n    <p>Delete this design?</p>\n    <mat-spinner [diameter]=\"20\" *ngIf=\"click == true\"></mat-spinner>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=onNoClick()>No Thanks</button>\n    <button mat-button (click)=onYesClick()>Yes</button>\n  </div>\n  ","import { Component, OnInit, Inject } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DesignFormComponent } from '../design-form/design-form.component';\nimport * as io from 'socket.io-client';\nimport * as moment from 'moment';\nimport { AuthService } from '../../../../shared/services/auth.service';\nimport { UsersService } from '../../../../shared/services/users.service';\nimport { DesignService } from '../../../../shared/services/design.service';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-designs',\n  templateUrl: './designs.component.html',\n  styleUrls: ['./designs.component.scss']\n})\nexport class DesignsComponent implements OnInit {\n  socket: any;\n  designs: any[] = [];\n  spinner: Boolean = false;\n  loading: Boolean = true;\n  all: Boolean = false;\n  counter: any = 0;\n  loggedInUser: any;\n  userData: any;\n  search: any;\n\n  constructor(\n    public dialog: MatDialog,\n    public authService: AuthService,\n    public userService: UsersService,\n    public designService: DesignService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private snackBar: MatSnackBar) {\n    this.socket = io(environment.BASE_URL);\n  }\n\n  ngOnInit() {\n    this.all = true;\n    this.loggedInUser = this.authService.getCurrentUser();\n    this.getUserData();\n    this.socket.on('refreshPage', () => {\n      this.getUserData();\n    });\n  }\n  getUserData() {\n    this.userService.getUser(this.loggedInUser._id).subscribe(async data => {\n      this.userData = data.user;\n      this.counter = 0;\n      await this.designService.getUsersDesigns(this.loggedInUser._id, this.counter).subscribe(_data => {\n        this.loading = false;\n        this.designs = _data.designs;\n        if (this.designs.length < 20) {\n          this.all = true;\n        } else {\n          this.all = false;\n        }\n      },\n      err => {\n        this.loading = false;\n        if (err instanceof HttpErrorResponse) {\n        if (err.status === 404) {\n          this.all = true;\n        } else {\n          // calling the snackbar errorhandler\n          this.errorHandler(err, 'failed to get designs');\n        }\n      }\n      });\n    },\n    err => {\n      this.loading = false;\n      // calling the snackbar errorhandler\n      this.errorHandler(err, 'failed to get user data');\n    });\n  }\n  openMore() {\n    this.spinner = true;\n    this.counter = this.counter + 20;\n    this.designService.getUsersDesigns(this.loggedInUser._id, this.counter).subscribe(data => {\n      this.designs.push(...data.designs);\n      this.spinner = false;\n      if (data.designs.length < 20) {\n        this.all = true;\n      } else {\n        this.all = false;\n      }\n    },\n     err => {\n       this.spinner = false;\n       if (err instanceof HttpErrorResponse) {\n        if (err.status === 404) {\n          this.all = true;\n        } else {\n          // calling the snackbar errorhandler\n          this.errorHandler(err, 'Failed to load designs');\n        }\n      }\n     }\n    );\n  }\n\n  openDesignForm() {\n    this.dialog.open(DesignFormComponent, {\n      height: '500px',\n      width: '600px',\n      autoFocus: false\n    });\n  }\n  // open dialog to edit\n  editBtnHandler(_id) {\n    this.dialog.open(DesignFormComponent, {\n      data: { id: _id },\n      autoFocus: false\n    });\n  }\n  // delete design\n  deleteBtnHandler(_id) {\n    this.dialog.open(DeleteDesignComponent, {\n      data: { id: _id },\n      width: '250px'\n    });\n  }\n  // moment time\n  TimeFromNow(time) {\n    return moment(time).fromNow();\n  }\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    console.error(message);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n}\n\n// confirm delete\n@Component({\n  selector: 'app-delete-design',\n  template: `\n  <h1 mat-dialog-title>Delete!</h1>\n  <div mat-dialog-content>\n    <p>Delete this design?</p>\n    <mat-spinner [diameter]=\"20\" *ngIf=\"click == true\"></mat-spinner>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=onNoClick()>No Thanks</button>\n    <button mat-button (click)=onYesClick()>Yes</button>\n  </div>\n  `,\n  styles: [`\n  mat-spinner {\n    margin: auto;\n    width: 50%;\n  }\n  `]\n})\nexport class DeleteDesignComponent implements OnInit {\n  socket: any;\n  click: Boolean = false;\n\n  constructor(public dialogRef: MatDialogRef<DeleteDesignComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private designService: DesignService,\n    private snackBar: MatSnackBar,\n    ) { this.socket = io(environment.BASE_URL); }\n\n  ngOnInit() {\n  }\n  onNoClick() {\n    this.socket.emit('refresh', {});\n    this.dialogRef.close();\n  }\n  onYesClick() {\n    this.click = true;\n    this.designService.deleteDesign(this.data.id).subscribe(\n      data => {\n        this.click = false;\n        this.snackBar.open('Design successfully deleted', 'Success', {\n          duration: 2000\n        });\n        this.socket.emit('refresh', {});\n        this.dialogRef.close();\n      },\n       // calling the snackbar errorhandler\n      err => {\n        this.click = false;\n        this.errorHandler(err, 'Failed to delete design');\n        this.dialogRef.close();\n      }\n    );\n  }\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    console.error(error);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DesignsComponent, DeleteDesignComponent } from './components/designs/designs.component';\nimport { DesignFormComponent } from './components/design-form/design-form.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { DesignService } from '../../shared/services/design.service';\n\n@NgModule({\n  declarations: [DesignsComponent, DesignFormComponent, DeleteDesignComponent],\n  imports: [CommonModule, SharedModule],\n  providers: [DesignService],\n  entryComponents: [DesignFormComponent, DeleteDesignComponent]\n})\nexport class PortfolioModule {}\n","<mat-dialog-content>\n  <mat-card>\n    <div>\n      <form class=\"form-container\" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">        \n        <!-- Nigeria states -->\n        <mat-form-field *ngIf=\"data?.userData.country.name == 'Nigeria'\" color=\"primary\">\n          <i matPrefix class=\"fas fa-map-marker-alt\">&nbsp;</i>\n          <mat-select formControlName=\"state\" placeholder=\"Select State\">\n            <mat-option *ngFor=\"let state of states\" [value]=\"state\">\n              {{state}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"userForm.controls.state.invalid && userForm.controls.state.touched\">select a valid\n            state</mat-error>\n        </mat-form-field>\n    \n        <mat-form-field *ngIf=\"data?.userData.country.name != 'Nigeria'\" color=\"primary\">\n          <i matPrefix class=\"fas fa-map-marker-alt\">&nbsp;</i>\n          <input matInput placeholder=\"State\" formControlName=\"state\">\n          <mat-error *ngIf=\"userForm.controls.state.invalid && userForm.controls.state.touched\">enter your state</mat-error>\n        </mat-form-field>\n\n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"far fa-building\">&nbsp;</i>\n          <input matInput placeholder=\"City\" formControlName=\"city\">\n          <mat-error *ngIf=\"userForm.controls.city.invalid && userForm.controls.city.touched\">city is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-phone\"><Span>+{{ data?.userData.country.callingCodes[0] }}</Span>&nbsp;</i>\n          <input matInput #phone placeholder=\"Phone\" formControlName=\"phone\" type=\"tel\">\n          <!-- <mat-hint align=\"end\">{{phone.value.length}} /10</mat-hint> -->\n          <mat-error *ngIf=\"userForm.controls.phone.invalid && userForm.controls.phone.touched\">phone is required</mat-error>\n        </mat-form-field>\n        \n        <mat-form-field color=\"primary\">\n          <i matPrefix class=\"fas fa-map-marked-alt\">&nbsp;</i>\n          <input matInput placeholder=\"Address\" formControlName=\"address\">\n          <mat-error *ngIf=\"userForm.controls.address.invalid && userForm.controls.address.touched\">address is required</mat-error>\n        </mat-form-field>\n        <div>\n          <button mat-raised-button type=\"reset\" [mat-dialog-close]=\"false\">\n            Cancel\n          </button>\n          <button mat-raised-button [disabled]=\"click == true || !userForm.valid\" type=\"submit\" color=\"accent\">\n            Update\n          </button>\n        </div>\n      </form>\n    </div>\n    <span *ngIf=\"click == true\">\n      <mat-spinner [diameter]=\"20\"></mat-spinner>\n    </span>\n    <div class=\"error\" *ngIf=\"error && success == false\">\n      <h4>{{error}}</h4>\n    </div><br>\n  </mat-card>\n</mat-dialog-content>\n","\n  <button mat-button\n  class=\"close\"\n  type=\"reset\" [mat-dialog-close]=\"false\"\n  matTooltip=\"close\">\n    <i class=\"fas fa-times\"></i>\n  </button>\n  <mat-dialog-content>\n  <mat-card>\n    <div *ngIf=\"success == false\">\n      <form class=\"form-container\" [formGroup]=\"passwordForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-form-field color=\"accent\">\n          <i matPrefix class=\"fas fa-lock-open\">&nbsp;</i>\n          <input #nPass matInput minlength=\"8\" placeholder=\"Current Password\" type=\"password\" formControlName=\"currentPassword\">\n          <mat-error *ngIf=\"passwordForm.controls.currentPassword.invalid && passwordForm.controls.currentPassword.touched\">enter your current password(8 characters minimum)</mat-error>\n        </mat-form-field><br>\n\n        <mat-form-field color=\"accent\">\n          <i matPrefix class=\"fas fa-key\">&nbsp;</i>\n          <input #nPass matInput minlength=\"8\" placeholder=\"New Password\" type=\"password\" formControlName=\"newPassword\">\n          <mat-error *ngIf=\"passwordForm.controls.newPassword.invalid && passwordForm.controls.newPassword.touched\">new password field is required(8 characters minimum)</mat-error>\n        </mat-form-field><br>\n\n        <mat-form-field color=\"accent\">\n          <i matPrefix class=\"fas fa-unlock-alt\">&nbsp;</i>\n          <input #cPass minlength=\"8\" matInput placeholder=\"Confirm Password\" type=\"password\" formControlName=\"confirmPassword\">\n          <mat-error *ngIf=\"passwordForm.controls.confirmPassword.invalid && passwordForm.controls.confirmPassword.touched\">confirm new password</mat-error>\n        </mat-form-field><br>\n        <div>\n          <button mat-raised-button type=\"reset\" [mat-dialog-close]=\"false\">\n            Cancel\n          </button>\n          <button mat-raised-button [disabled]=\"click == true || !passwordForm.valid\" type=\"submit\" color=\"accent\">\n            Reset\n          </button>\n        </div>\n      </form>\n    </div>\n    <div *ngIf=\"success == true\">\n      <div class=\"success\">\n        <mat-icon>check_circle_outline</mat-icon>\n        <h4>Password changed successfully</h4>\n      </div>\n    </div><br>\n    <span *ngIf=\"click == true\">\n      <mat-spinner [diameter]=\"20\"></mat-spinner>\n    </span>\n    <div class=\"error\" *ngIf=\"sendError && success == false\">\n      <h4>{{sendError}}</h4>\n    </div><br>\n  </mat-card>\n  </mat-dialog-content>\n  ","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport * as io from 'socket.io-client';\nimport { CountryService } from '../../../../shared/services/country.service';\nimport { UsersService } from '../../../../shared/services/users.service';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent implements OnInit {\n  socket: any;\n  userForm: FormGroup;\n  selected: any;\n  success: Boolean;\n  error: string;\n  click: Boolean = false;\n  states: any;\n  countries: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditProfileComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private countryService: CountryService,\n    private userService: UsersService,\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) { this.socket = io(environment.BASE_URL); }\n\n  ngOnInit() {\n    // this.getCountries();\n    this.states = this.countryService.nigeriaStates;\n    this.createUserForm();\n    this.setUserToForm();\n  }\n\n  // getCountries() {\n  //   this.countryService.getCountries().subscribe(\n  //     countries => {\n  //       this.countries = countries;\n  //     }\n  //   );\n  // }\n  onSubmit() {\n    this.click = true;\n     this.userService.updateUser(this.data.userData._id, this.userForm.value).subscribe(\n      data => {\n        this.click = false;\n        this.socket.emit('refresh', {});\n        this.snackBar.open('Profile Updated', 'Success', {\n          duration: 2000\n        });\n        this.dialogRef.close();\n      },\n      // calling the snackbar errorhandler\n      err => this.errorHandler(err, 'Failed to update profile')\n    );\n  }\n  private setUserToForm() {\n    if (!this.data) {\n      return;\n    }\n    const userData = {\n      state: this.data.userData.state,\n      city: this.data.userData.city,\n      phone: this.data.userData.phone,\n      address: this.data.userData.address\n    };\n    this.userForm.patchValue(userData);\n  }\n\n  createUserForm() {\n    this.userForm = this.fb.group({\n      state: ['', Validators.required],\n      city: ['', Validators.required],\n      phone: ['', Validators.required],\n      address: ['', Validators.required]\n    });\n  }\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    this.click = false;\n    console.error(message);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n\n}\n\n// change password\n@Component({\n  selector: 'app-change-password',\n  template: `\n  <button mat-button\n  class=\"close\"\n  type=\"reset\" [mat-dialog-close]=\"false\"\n  matTooltip=\"close\">\n    <i class=\"fas fa-times\"></i>\n  </button>\n  <mat-dialog-content>\n  <mat-card>\n    <div *ngIf=\"success == false\">\n      <form class=\"form-container\" [formGroup]=\"passwordForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-form-field color=\"accent\">\n          <i matPrefix class=\"fas fa-lock-open\">&nbsp;</i>\n          <input #nPass matInput minlength=\"8\" placeholder=\"Current Password\" type=\"password\" formControlName=\"currentPassword\">\n          <mat-error *ngIf=\"passwordForm.controls.currentPassword.invalid && passwordForm.controls.currentPassword.touched\">enter your current password(8 characters minimum)</mat-error>\n        </mat-form-field><br>\n\n        <mat-form-field color=\"accent\">\n          <i matPrefix class=\"fas fa-key\">&nbsp;</i>\n          <input #nPass matInput minlength=\"8\" placeholder=\"New Password\" type=\"password\" formControlName=\"newPassword\">\n          <mat-error *ngIf=\"passwordForm.controls.newPassword.invalid && passwordForm.controls.newPassword.touched\">new password field is required(8 characters minimum)</mat-error>\n        </mat-form-field><br>\n\n        <mat-form-field color=\"accent\">\n          <i matPrefix class=\"fas fa-unlock-alt\">&nbsp;</i>\n          <input #cPass minlength=\"8\" matInput placeholder=\"Confirm Password\" type=\"password\" formControlName=\"confirmPassword\">\n          <mat-error *ngIf=\"passwordForm.controls.confirmPassword.invalid && passwordForm.controls.confirmPassword.touched\">confirm new password</mat-error>\n        </mat-form-field><br>\n        <div>\n          <button mat-raised-button type=\"reset\" [mat-dialog-close]=\"false\">\n            Cancel\n          </button>\n          <button mat-raised-button [disabled]=\"click == true || !passwordForm.valid\" type=\"submit\" color=\"accent\">\n            Reset\n          </button>\n        </div>\n      </form>\n    </div>\n    <div *ngIf=\"success == true\">\n      <div class=\"success\">\n        <mat-icon>check_circle_outline</mat-icon>\n        <h4>Password changed successfully</h4>\n      </div>\n    </div><br>\n    <span *ngIf=\"click == true\">\n      <mat-spinner [diameter]=\"20\"></mat-spinner>\n    </span>\n    <div class=\"error\" *ngIf=\"sendError && success == false\">\n      <h4>{{sendError}}</h4>\n    </div><br>\n  </mat-card>\n  </mat-dialog-content>\n  `,\n  styles: [`\n  .close {\n    color: rgb(180, 23, 23);\n    margin: 0 20% 5px 80%;\n    border: none;\n  }\n  .mat-spinner {\n    margin: 10px auto;\n  }\n  .success {\n    color: rgb(6, 252, 149);\n    text-align: center;\n    padding: 2px;\n    border: 5px dotted rgb(6, 252, 149);\n  }\n  .error {\n    color: red;\n    text-align: justify;\n    padding: 2px;\n    border: 5px dotted red;\n  }\n  `]\n})\nexport class ChangePasswordComponent implements OnInit {\n  passwordForm: FormGroup;\n  success: Boolean = false;\n  sendError: String;\n  click: Boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ChangePasswordComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    public userService: UsersService,\n    ) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n  onSubmit() {\n    this.click = true;\n    this.sendError = null;\n    this.userService.changePassword(this.data.id, this.passwordForm.value).subscribe(\n      data => {\n        this.click = false;\n        this.success = true;\n      },\n      err => {\n        this.click = false;\n        this.success = false;\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 400) {\n            this.sendError = err.error.message[0].message;\n          } else {\n           this.sendError = err.error.msg;\n        }\n        }\n      });\n  }\n  // form builder model\n  private createForm() {\n    this.passwordForm = this.fb.group({\n      currentPassword: ['', Validators.required],\n      newPassword: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    });\n  }\n}\n","<mat-spinner color=\"accent\" [diameter]=\"30\" *ngIf=\"!userData\"></mat-spinner>\n<section *ngIf=\"userData\">\n  <div class=\"notice\" *ngIf=\"notice == true\">\n    <button mat-button \n    class=\"close\" \n    (click)=\"notice = false\" \n    matTooltip=\"close\">\n      <i class=\"fas fa-times\"></i>\n    </button>\n    {{userData?.notice}}\n  </div>\n  <mat-card>\n    <img src=\"../../../assets/images/logo.png\" width=\"100px\" alt=\"profile image\"><br>\n    <h3>{{userData.firstname + ' ' + userData.lastname}}</h3><br>\n    <h6 *ngIf=\"active == true\">Status:&nbsp; <span class=\"active\">Active</span></h6>\n    <h6 *ngIf=\"active == false\">Status:&nbsp; <span class=\"inactive\">Inactive</span></h6>\n    <h5>Subscription Expires:&nbsp; {{TimeFromNow(subscription[0].end)}}</h5>\n    <div class=\"details\">\n      <h4><i class=\"fas fa-envelope\">&nbsp;</i>Email: {{userData.email}}</h4><br>\n      <h4><i class=\"fas fa-mobile-alt\">&nbsp;</i>Phone: {{'+' + userData.country.callingCodes[0] + userData.phone}}</h4><br>\n      <h4><i class=\"fas fa-address-card\">&nbsp;</i>BusinessName: {{userData.businessname}}</h4><br>\n      <h4><i class=\"fas fa-globe-africa\">&nbsp;</i>Location: {{userData.city + ',' + ' ' + userData.state + ',' + ' ' + userData.country.name}}</h4><br>\n      <h4><i class=\"fas fa-map-marker-alt\">&nbsp;</i>Address: {{userData.address}}</h4><br>\n      <h4><i class=\"fas fa-male\">&nbsp;</i>Gender: {{userData.sex}}</h4><br>\n      <h4><i class=\"fas fa-birthday-cake\">&nbsp;</i>DOB: {{userData.dob | date: 'mediumDate'}}</h4><br>\n      <h4><i class=\"far fa-clock\">&nbsp;</i>Registered: {{TimeFromNow(userData.registered)}}</h4><br>\n      <h4><i class=\"fas fa-check\">&nbsp;</i>Last Login: {{TimeFromNow(userData.lastLogin)}}</h4><br>\n      <div class=\"link\">\n        Portfolio link:<br>\n        <span><input type=\"text\" value=\"{{userData.portfolioUrl}}\" disabled/></span><br>\n        <!-- <span>{{userData.portfolioUrl}}</span><br>  -->\n        <p>\n          share via:\n          <a href=\"https://instagram.com/\"><i class=\"fab fa-instagram\"></i></a>\n          <a href=\"https://facebook.com/\"><i class=\"fab fa-facebook\"></i></a>\n          <a href=\"https://wa.me/?text=Hello,%20Ckeckout%20my%20portfolio%20on%20Fastudio%20{{userData.portfolioUrl}}\"><i class=\"fab fa-whatsapp\"></i></a>\n          <a href=\"https://twitter.com/\"><i class=\"fab fa-twitter\"></i></a>\n        </p>\n      </div>\n    </div>\n    <div class=\"action\">\n      <button mat-button (click)=\"changePassword()\" color=\"primary\">Change Password</button>\n      <button class=\"edit\" (click)=\"editProfile()\" mat-raised-button color=\"accent\">Update Profile</button>\n    </div>\n  </mat-card>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as io from 'socket.io-client';\nimport * as moment from 'moment';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { UsersService } from '../../shared/services/users.service';\nimport { EditProfileComponent, ChangePasswordComponent } from './components/edit-profile/edit-profile.component';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  userData: any;\n  notice: Boolean = true;\n  socket: any;\n  loggedInUser: any;\n  subscription: any;\n  active: Boolean;\n\n  constructor(\n    public dialog: MatDialog,\n    private authService: AuthService,\n    private userService: UsersService,\n    private snackBar: MatSnackBar) {\n    this.socket = io(environment.BASE_URL);\n  }\n\n  ngOnInit() {\n    this.loggedInUser = this.authService.getCurrentUser();\n    this.getUser();\n    this.socket.on('refreshPage', data => {\n      this.getUser();\n    });\n  }\n  getUser() {\n    this.userService.getUser(this.loggedInUser._id).subscribe(data => {\n      this.userData = data.user;\n      this.subscription = data.user.subscriptions.reverse();\n      this.active = true;\n      if (moment(this.subscription[0].end).isAfter(moment())) {\n        this.active = true;\n      } else {\n        this.active = false;\n      }\n    },\n    err => {\n      this.errorHandler(err, 'failed to get userdata');\n    });\n  }\n  editProfile() {\n    this.dialog.open(EditProfileComponent, {\n      data: { userData: this.userData },\n      autoFocus: false\n    });\n  }\n  changePassword() {\n    this.dialog.open(ChangePasswordComponent, {\n      data: { id: this.userData._id },\n      autoFocus: false\n    });\n  }\n  // moment time\n  TimeFromNow(time) {\n    return moment(time).fromNow();\n  }\n  // error handling with snackbar\n  private errorHandler(error, message) {\n    console.error(message);\n    this.snackBar.open(message, 'Error', {\n      duration: 2000\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileComponent } from './profile.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport {\n  EditProfileComponent,\n  ChangePasswordComponent\n} from './components/edit-profile/edit-profile.component';\n\n@NgModule({\n  declarations: [\n    ProfileComponent,\n    EditProfileComponent,\n    ChangePasswordComponent\n  ],\n  imports: [CommonModule, SharedModule],\n  entryComponents: [EditProfileComponent, ChangePasswordComponent]\n})\nexport class ProfileModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Design } from '../models/design';\nimport { environment } from '../../../environments/environment';\n\n// const BASE_URL = 'http://localhost:3000/v1';\nconst BASE_URL = `${environment.BASE_URL}/v1`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class DesignService {\n  constructor(private httpClient: HttpClient, private router: Router) {}\n\n  createDesign(body: any): Observable<any> {\n    return this.httpClient.post<Design>(`${BASE_URL}/designs`, body);\n  }\n  getDesigns(len: any): Observable<any> {\n    return this.httpClient.get<Design>(`${BASE_URL}/designs/skip=${len}`);\n  }\n  getUsersDesigns(id: any, len: any): Observable<any> {\n    return this.httpClient.get<Design>(`${BASE_URL}/designs/designersId=${id}/skip=${len}`);\n  }\n  updateDesign(id: string, body: any): Observable<Design> {\n    return this.httpClient.put<Design>(`${BASE_URL}/designs/${id}`, body);\n  }\n  deleteDesign(id: string): Observable<Design> {\n    return this.httpClient.delete<Design>(`${BASE_URL}/designs/${id}`);\n  }\n  // get by id for editing\n  getDesign(id: string): Observable<any> {\n    return this.httpClient.get<Design>(`${BASE_URL}/designs/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Enquiry } from '../models/enquiry';\nimport { environment } from '../../../environments/environment';\n\n// const BASE_URL = 'http://localhost:3000/v1';\nconst BASE_URL = `${environment.BASE_URL}/v1`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnquiryService {\n  constructor(private httpClient: HttpClient, private router: Router) {}\n\n  createEnquiry(design: any, enquiry: any): Observable<any> {\n    return this.httpClient.post<any>(`${BASE_URL}/enquiry`, {\n      design,\n      enquiry\n    });\n  }\n  getEnquiries(): Observable<any> {\n    return this.httpClient.get<Enquiry>(`${BASE_URL}/enquiry`);\n  }\n  updateEnquiry(id: string, body: any): Observable<any> {\n    return this.httpClient.put<any>(`${BASE_URL}/enquiry/${id}`, body);\n  }\n  deleteEnquiry(id: string): Observable<any> {\n    return this.httpClient.delete<Enquiry>(`${BASE_URL}/enquiry/${id}`);\n  }\n}\n"],"sourceRoot":""}